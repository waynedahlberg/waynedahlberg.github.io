{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{\"8/fM\":function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/110920-swift-enumerations\",function(){return t(\"8Bvx\")}])},\"8Bvx\":function(e,a,t){\"use strict\";t.r(a),t.d(a,\"__N_SSG\",(function(){return r})),t.d(a,\"meta\",(function(){return d})),t.d(a,\"default\",(function(){return O}));var c=t(\"Ff2n\"),s=t(\"wx14\"),n=t(\"q1tI\"),b=t.n(n),p=t(\"7ljp\"),m=t(\"CZVI\"),l=t(\"iBhN\"),o=t(\"lrPt\"),r=(b.a.createElement,!0),d={title:\"Swift Enumerations\",description:\"The basics of Swift Enumerations.\",date:\"2020-11-09T12:00:00.000Z\",authors:[l.a],discussion:\"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"},N={meta:d},j=e=>Object(p.b)(m.a,Object(s.a)({meta:d},e));function O(e){var{components:a}=e,t=Object(c.a)(e,[\"components\"]);return Object(p.b)(j,Object(s.a)({},N,t,{components:a,mdxType:\"MDXLayout\"}),Object(p.b)(\"img\",{src:o.a,alt:\"Swift Enumerations hero image\"}),Object(p.b)(\"p\",null,\"An enumeration defines a common type for a group of related values and enables you to work with those values in a type-safe way within your code.\"),Object(p.b)(\"div\",{class:\"rounded-md bg-blue-50 p-4\"},Object(p.b)(\"div\",{class:\"flex\"},Object(p.b)(\"div\",{class:\"flex-shrink-0\"},Object(p.b)(\"svg\",{class:\"h-5 w-5 text-blue-400\",xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 20 20\",fill:\"currentColor\"},Object(p.b)(\"path\",{fillRule:\"evenodd\",d:\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",clipRule:\"evenodd\"}))),Object(p.b)(\"div\",{class:\"ml-3 flex-1 md:flex md:justify-between\"},Object(p.b)(\"p\",{class:\"text-sm leading-5 text-blue-700\"},\"This is a another post in a series intended as a personal growth exercise. As I learn and digest new things, I want to write about them to solidify my understanding.\"),Object(p.b)(\"p\",{class:\"mt-3 text-sm leading-5 md:mt-0 md:ml-6\"},Object(p.b)(\"a\",{href:\"https://fs.blog/2015/01/richard-feynman-knowing-something/\",class:\"whitespace-no-wrap font-medium text-blue-700 hover:text-blue-600 transition ease-in-out duration-150\"},\"Feynman \\u2192\"))))),Object(p.b)(\"ul\",null,Object(p.b)(\"li\",{parentName:\"ul\"},Object(p.b)(\"em\",{parentName:\"li\"},\"Creating an enum:\"),\" You can declare an enum like this in swift\")),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"enum\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"TimePeriod\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" morning\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" noon\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" afternoon\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" night\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\")),Object(p.b)(\"p\",null,'The name of this enum is \"TimePeriod\" and it has four cases: ',Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"morning\"),\", \",Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"noon\"),\", \",Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"afternoon\"),\", and \",Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"night\"),\".\"),Object(p.b)(\"p\",null,\"Enumerations, or \",Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"enum\"),\"s can also be declared in a single line, like this:\"),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"enum\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"TimePeriod\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" morning\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" noon\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" afternoon\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" night\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\")),Object(p.b)(\"ul\",null,Object(p.b)(\"li\",{parentName:\"ul\"},Object(p.b)(\"em\",{parentName:\"li\"},\"enum type:\"),\" When we define an enum, it defines itself as a new type in Swift. New variables of that type can be declared like this:\")),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"var\"),\" presentTime \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"TimePeriod\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"morning\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),\"presentType\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-gray-400 italic\"}),\"// morning\"),\"\\n\")),Object(p.b)(\"p\",null,Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"presentTime\"),\" variable is of type \",Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"TimePeriod\"),\", and we can set the value using the \",Object(p.b)(\"inlineCode\",{parentName:\"p\"},\".\"),\" operation.\"),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),\"presentTime \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"noon\\npresentTime \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"afternoon\\npresentTime \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"night\\n\")),Object(p.b)(\"ul\",null,Object(p.b)(\"li\",{parentName:\"ul\"},Object(p.b)(\"em\",{parentName:\"li\"},\"Matching enum value:\"),\" The Swift \",Object(p.b)(\"inlineCode\",{parentName:\"li\"},\"switch\"),\" statement is a simple and straightforward solution for matching the enum value.\")),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"switch\"),\" presentTime \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"morning\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\"\\n        \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"Foggy morning\"'),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"noon\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\"\\n        \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"Sunny noon\"'),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"afternoon\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\"\\n        \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"Cloudy afternoon\"'),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"night\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\"\\n        \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"Rainy night\"'),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\")),Object(p.b)(\"ul\",null,Object(p.b)(\"li\",{parentName:\"ul\"},Object(p.b)(\"em\",{parentName:\"li\"},\"Iterate enum cases:\"),\" To iterator over the cases in an enumeration, we declare it with the \",Object(p.b)(\"inlineCode\",{parentName:\"li\"},\"CaseIterable\"),\" type.\")),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"enum\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"TimePeriod\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"CaseIterable\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" morning\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" noon\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" afternoon\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" night\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\")),Object(p.b)(\"p\",null,\"Now we can iterate over all the cases.\"),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"let\"),\" numberOfChoices \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"TimePeriod\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"allCases\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"count\"),\"\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"',Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\"\\\\(\"),\"numberOfChoices\",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\")\")),' choices available\"'),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"for\"),\" timeperiod \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"in\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"TimePeriod\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"allCases \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),\"timeperiod\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\")),Object(p.b)(\"ul\",null,Object(p.b)(\"li\",{parentName:\"ul\"},Object(p.b)(\"em\",{parentName:\"li\"},\"Raw value:\"),\" Each case can provide a \",Object(p.b)(\"inlineCode\",{parentName:\"li\"},\"rawValue\"),\". It can be implicit and explicit. We must provide the type in the declaration of the enumeration.\")),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"enum\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Institute\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Int\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" school\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" college\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" university\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\")),Object(p.b)(\"p\",null,Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"Institute\"),\" will be of \",Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"Int\"),\" type raw value for every case. It can be any type in Swift. In this case the value for \",Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"school\"),\" is 0, and so on.\"),Object(p.b)(\"p\",null,\"Raw values for every case can be checked like this:\"),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Institute\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"school\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"rawValue\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"            \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-gray-400 italic\"}),\"// 0\"),\"\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Institute\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"college\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"rawValue\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"           \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-gray-400 italic\"}),\"// 1\"),\"\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Institute\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"university\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"rawValue\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"        \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-gray-400 italic\"}),\"// 2\"),\"\\n\")),Object(p.b)(\"p\",null,\"You can also provide explicit raw values for every case if you want.\"),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"enum\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Institute\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Int\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" school \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"10\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" college \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"12\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" university \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"14\"),\"\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"|\"),\"\\n\")),Object(p.b)(\"ul\",null,Object(p.b)(\"li\",{parentName:\"ul\"},Object(p.b)(\"em\",{parentName:\"li\"},\"Associate values with enum cases:\"),\" Sometimes you want to set values with cases. We can also assign tuple values for cases as that enum type. Here we define a variable \",Object(p.b)(\"inlineCode\",{parentName:\"li\"},\"sampleArea\"),\" as an enum with a value of \",Object(p.b)(\"inlineCode\",{parentName:\"li\"},\"Area.square\"),\" with an associated tuple value of 10 and 15.\")),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"enum\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Area\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"square\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Double\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Double\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"cube\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Double\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Double\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Double\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"var\"),\" sampleArea \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"Area\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"square\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"10\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"\"}),\"15\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n\")),Object(p.b)(\"p\",null,\"Here we can match the enum value with a switch statement. This time we have some assocated values with every enum case. Those values can be extracted as variables or constants for use inside the switch statment.\"),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"switch\"),\" sampleArea \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"square\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"let\"),\" height\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"let\"),\" width\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\"\\n        \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"Square of: ',Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\"\\\\(\"),\"height\",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\")\")),\", \",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\"\\\\(\"),\"width\",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\")\")),'.\"'),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"cube\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"let\"),\" height\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"let\"),\" width\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"let\"),\" length\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\"\\n        \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"Square of: ',Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\"\\\\(\"),\"height\",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\")\")),\", \",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\"\\\\(\"),\"width\",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\")\")),\", \",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\"\\\\(\"),\"length\",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\")\")),'\"'),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\")),Object(p.b)(\"p\",null,\"If associated values are constant or variable, we can simply place \",Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"var\"),\" or \",Object(p.b)(\"inlineCode\",{parentName:\"p\"},\"let\"),\" before the case name.\"),Object(p.b)(\"pre\",{className:\"language-swift\"},Object(p.b)(\"code\",Object(s.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"switch\"),\" sampleArea \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"let\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"square\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),\"height\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" width\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\"\\n        \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"Square of: ',Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\"\\\\(\"),\"height\",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\")\")),\", \",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\"\\\\(\"),\"width\",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\")\")),'.\"'),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n    \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"case\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"let\"),\" \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"cube\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),\"height\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" width\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\",\"),\" length\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\"\\n        \",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"print\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"Square of: ',Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\"\\\\(\"),\"height\",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\")\")),\", \",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\"\\\\(\"),\"width\",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\")\")),\", \",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\"\\\\(\"),\"length\",Object(p.b)(\"span\",Object(s.a)({parentName:\"span\"},{className:\"\"}),\")\")),'\"'),Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n\",Object(p.b)(\"span\",Object(s.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\")))}O.isMDXComponent=!0},CZVI:function(e,a,t){\"use strict\";t.d(a,\"a\",(function(){return w}));var c=t(\"wx14\"),s=t(\"Ff2n\"),n=t(\"q1tI\"),b=t.n(n),p=t(\"8Kt/\"),m=t.n(p),l=b.a.createElement;function o(e){var{children:a}=e;return l(\"h1\",{className:\"text-5xl leading-14 font-bold text-gray-900 tracking-tight sm:text-4xl sm:leading-10 md:text-5xl md:leading-14\"},a)}var r=t(\"SYun\"),d=t.n(r),N=t(\"YFqc\"),j=t.n(N),O=t(\"nOHt\"),i=t(\"7ljp\"),u=b.a.createElement,x={pre:e=>{var{className:a}=e,t=Object(s.a)(e,[\"className\"]);return u(\"pre\",Object(c.a)({className:\"\".concat(a,\" rounded-md bg-gray-800 py-3 px-4 overflow-x-auto\")},t))},\"pre.code\":e=>{var{className:a}=e,t=Object(s.a)(e,[\"className\"]);return u(\"code\",Object(c.a)({className:\"\".concat(a,\" text-gray-200\")},t))}},h=d()(\"{dddd}, {MMMM} {DD}, {YYYY}\");function w(e){var{meta:a,children:t,posts:c}=e,s=Object(O.useRouter)(),n=c.findIndex(e=>e.link===s.pathname),b=c[n+1],p=c[n-1];return u(\"article\",{className:\"xl:divide-y xl:divide-gray-200\"},u(m.a,null,u(\"title\",null,a.title,\" \\u2013 Tailwind CSS\"),u(\"meta\",{name:\"twitter:card\",content:\"summary_large_image\"}),u(\"meta\",{name:\"twitter:site\",content:\"@waynedahlberg\"}),u(\"meta\",{name:\"twitter:creator\",content:\"@waynedahlberg\"}),u(\"meta\",{name:\"twitter:title\",content:\"\".concat(a.title,\" \\u2013 Wayne Dahlberg\")}),u(\"meta\",{name:\"twitter:description\",content:a.description}),u(\"meta\",{name:\"twitter:image\",content:\"https://blog.tailwindcss.com\".concat(a.image)}),u(\"meta\",{property:\"og:url\",content:\"https://blog.tailwindcss.com\".concat(s.pathname)}),u(\"meta\",{property:\"og:type\",content:\"article\"}),u(\"meta\",{property:\"og:title\",content:\"\".concat(a.title,\" \\u2013 Wayne Dahlberg\")}),u(\"meta\",{property:\"og:description\",content:a.description}),u(\"meta\",{property:\"og:image\",content:\"https://blog.tailwindcss.com\".concat(a.image)}),u(\"meta\",{name:\"description\",content:a.description})),u(\"header\",{className:\"pt-6 xl:pb-10\"},u(\"div\",{className:\"space-y-1 text-center\"},u(\"dl\",{className:\"space-y-10\"},u(\"div\",null,u(\"dt\",{className:\"sr-only\"},\"Published on\"),u(\"dd\",{className:\"text-sm leading-6 font-medium text-gray-500\"},u(\"time\",{dateTime:a.date},h.render(new Date(a.date)))))),u(\"div\",null,u(o,null,a.title)))),u(\"div\",{className:\"divide-y xl:divide-y-0 divide-gray-200 xl:grid xl:grid-cols-4 xl:col-gap-6 pb-16 xl:pb-20\",style:{gridTemplateRows:\"auto 1fr\"}},u(\"dl\",{className:\"pt-6 pb-10 xl:pt-11 xl:border-b xl:border-gray-200\"},u(\"dt\",{className:\"sr-only\"},\"Authors\"),u(\"dd\",null,u(\"ul\",{className:\"flex justify-center xl:block space-x-8 sm:space-x-12 xl:space-x-0 xl:space-y-8\"},a.authors.map(e=>u(\"li\",{key:e.twitter,className:\"flex items-center space-x-2\"},u(\"img\",{src:e.avatar,alt:\"\",className:\"w-10 h-10 rounded-full\"}),u(\"dl\",{className:\"text-sm font-medium leading-5 whitespace-no-wrap\"},u(\"dt\",{className:\"sr-only\"},\"Name\"),u(\"dd\",{className:\"text-gray-900\"},e.name),u(\"dt\",{className:\"sr-only\"},\"Twitter\"),u(\"dd\",null,u(\"a\",{href:\"https://twitter.com/\".concat(e.twitter),className:\"text-teal-500 hover:text-teal-700\"},e.twitter)))))))),u(\"div\",{className:\"divide-y divide-gray-200 xl:pb-0 xl:col-span-3 xl:row-span-2\"},u(\"div\",{className:\"prose max-w-none pt-10 pb-8\"},u(i.a,{components:x},t))),u(\"footer\",{className:\"text-sm font-medium leading-5 divide-y divide-gray-200 xl:col-start-1 xl:row-start-2\"},(p||b)&&u(\"div\",{className:\"space-y-8 py-8\"},p&&u(\"div\",null,u(\"h2\",{className:\"text-xs tracking-wide uppercase text-gray-500\"},\"Next Article\"),u(\"div\",{className:\"text-teal-500 hover:text-teal-600\"},u(j.a,{href:p.link},u(\"a\",null,p.title)))),b&&u(\"div\",null,u(\"h2\",{className:\"text-xs tracking-wide uppercase text-gray-500\"},\"Previous Article\"),u(\"div\",{className:\"text-teal-500 hover:text-teal-700\"},u(j.a,{href:b.link},u(\"a\",null,b.title))))),u(\"div\",{className:\"pt-8\"},u(j.a,{href:\"/\"},u(\"a\",{className:\"text-teal-500 hover:text-teal-700\"},\"\\u2190 All Posts\"))))))}},lrPt:function(e,a,t){\"use strict\";a.a=\"/_next/static/media/hero-enums.7bfd258be3a2cec92872da47d7fbb47c.png\"}},[[\"8/fM\",0,2,1,3]]]);","extractedComments":[]}