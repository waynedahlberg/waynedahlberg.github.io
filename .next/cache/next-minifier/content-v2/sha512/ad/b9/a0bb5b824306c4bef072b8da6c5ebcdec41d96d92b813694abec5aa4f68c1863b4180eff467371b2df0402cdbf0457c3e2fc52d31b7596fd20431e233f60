{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{\"7ljp\":function(e,t,a){\"use strict\";a.d(t,\"a\",(function(){return b})),a.d(t,\"b\",(function(){return O}));var n=a(\"q1tI\"),c=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,c=function(e,t){if(null==e)return{};var a,n,c={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(c[a]=e[a]);return c}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(c[a]=e[a])}return c}var i=c.a.createContext({}),p=function(e){var t=c.a.useContext(i),a=t;return e&&(a=\"function\"===typeof e?e(t):o(o({},t),e)),a},b=function(e){var t=p(e.components);return(c.a.createElement(i.Provider,{value:t},e.children))},d=\"mdxType\",m={inlineCode:\"code\",wrapper:function(e){var t=e.children;return(c.a.createElement(c.a.Fragment,{},t))}},u=c.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,i=l(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),b=p(a),d=n,u=b[\"\".concat(s,\".\").concat(d)]||b[d]||m[d]||r;return a?c.a.createElement(u,o(o({ref:t},i),{},{components:a})):c.a.createElement(u,o({ref:t},i))}));function O(e,t){var a=arguments,n=t&&t.mdxType;if(\"string\"===typeof e||n){var r=a.length,s=new Array(r);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[d]=\"string\"===typeof e?e:n,s[1]=o;for(var i=2;i<r;i++)s[i]=a[i];return c.a.createElement.apply(null,s)}return c.a.createElement.apply(null,a)}u.displayName=\"MDXCreateElement\"},CZVI:function(e,t,a){\"use strict\";a.d(t,\"a\",(function(){return h}));var n=a(\"wx14\"),c=a(\"Ff2n\"),r=a(\"q1tI\"),s=a.n(r),o=a(\"8Kt/\"),l=a.n(o),i=s.a.createElement;function p(e){var t=e.children;return i(\"h1\",{className:\"text-5xl leading-14 font-bold text-gray-900 tracking-tight sm:text-4xl sm:leading-10 md:text-5xl md:leading-14\"},t)}var b=a(\"SYun\"),d=a.n(b),m=a(\"YFqc\"),u=a.n(m),O=a(\"nOHt\"),j=a(\"7ljp\"),N=s.a.createElement,f={pre:function(e){var t=e.className,a=Object(c.a)(e,[\"className\"]);return N(\"pre\",Object(n.a)({className:\"\".concat(t,\" rounded-md bg-gray-800 py-3 px-4 overflow-x-auto\")},a))},\"pre.code\":function(e){var t=e.className,a=Object(c.a)(e,[\"className\"]);return N(\"code\",Object(n.a)({className:\"\".concat(t,\" text-gray-200\")},a))}},y=d()(\"{dddd}, {MMMM} {DD}, {YYYY}\");function h(e){var t=e.meta,a=e.children,n=e.posts,c=Object(O.useRouter)(),r=n.findIndex((function(e){return e.link===c.pathname})),s=n[r+1],o=n[r-1];return N(\"article\",{className:\"xl:divide-y xl:divide-gray-200\"},N(l.a,null,N(\"title\",null,t.title,\" \\u2013 Tailwind CSS\"),N(\"meta\",{name:\"twitter:card\",content:\"summary_large_image\"}),N(\"meta\",{name:\"twitter:site\",content:\"@waynedahlberg\"}),N(\"meta\",{name:\"twitter:creator\",content:\"@waynedahlberg\"}),N(\"meta\",{name:\"twitter:title\",content:\"\".concat(t.title,\" \\u2013 Wayne Dahlberg\")}),N(\"meta\",{name:\"twitter:description\",content:t.description}),N(\"meta\",{name:\"twitter:image\",content:\"https://blog.tailwindcss.com\".concat(t.image)}),N(\"meta\",{property:\"og:url\",content:\"https://blog.tailwindcss.com\".concat(c.pathname)}),N(\"meta\",{property:\"og:type\",content:\"article\"}),N(\"meta\",{property:\"og:title\",content:\"\".concat(t.title,\" \\u2013 Wayne Dahlberg\")}),N(\"meta\",{property:\"og:description\",content:t.description}),N(\"meta\",{property:\"og:image\",content:\"https://blog.tailwindcss.com\".concat(t.image)}),N(\"meta\",{name:\"description\",content:t.description})),N(\"header\",{className:\"pt-6 xl:pb-10\"},N(\"div\",{className:\"space-y-1 text-center\"},N(\"dl\",{className:\"space-y-10\"},N(\"div\",null,N(\"dt\",{className:\"sr-only\"},\"Published on\"),N(\"dd\",{className:\"text-sm leading-6 font-medium text-gray-500\"},N(\"time\",{dateTime:t.date},y.render(new Date(t.date)))))),N(\"div\",null,N(p,null,t.title)))),N(\"div\",{className:\"divide-y xl:divide-y-0 divide-gray-200 xl:grid xl:grid-cols-4 xl:col-gap-6 pb-16 xl:pb-20\",style:{gridTemplateRows:\"auto 1fr\"}},N(\"dl\",{className:\"pt-6 pb-10 xl:pt-11 xl:border-b xl:border-gray-200\"},N(\"dt\",{className:\"sr-only\"},\"Authors\"),N(\"dd\",null,N(\"ul\",{className:\"flex justify-center xl:block space-x-8 sm:space-x-12 xl:space-x-0 xl:space-y-8\"},t.authors.map((function(e){return N(\"li\",{key:e.twitter,className:\"flex items-center space-x-2\"},N(\"img\",{src:e.avatar,alt:\"\",className:\"w-10 h-10 rounded-full\"}),N(\"dl\",{className:\"text-sm font-medium leading-5 whitespace-no-wrap\"},N(\"dt\",{className:\"sr-only\"},\"Name\"),N(\"dd\",{className:\"text-gray-900\"},e.name),N(\"dt\",{className:\"sr-only\"},\"Twitter\"),N(\"dd\",null,N(\"a\",{href:\"https://twitter.com/\".concat(e.twitter),className:\"text-teal-500 hover:text-teal-700\"},e.twitter))))}))))),N(\"div\",{className:\"divide-y divide-gray-200 xl:pb-0 xl:col-span-3 xl:row-span-2\"},N(\"div\",{className:\"prose max-w-none pt-10 pb-8\"},N(j.a,{components:f},a))),N(\"footer\",{className:\"text-sm font-medium leading-5 divide-y divide-gray-200 xl:col-start-1 xl:row-start-2\"},(o||s)&&N(\"div\",{className:\"space-y-8 py-8\"},o&&N(\"div\",null,N(\"h2\",{className:\"text-xs tracking-wide uppercase text-gray-500\"},\"Next Article\"),N(\"div\",{className:\"text-teal-500 hover:text-teal-600\"},N(u.a,{href:o.link},N(\"a\",null,o.title)))),s&&N(\"div\",null,N(\"h2\",{className:\"text-xs tracking-wide uppercase text-gray-500\"},\"Previous Article\"),N(\"div\",{className:\"text-teal-500 hover:text-teal-700\"},N(u.a,{href:s.link},N(\"a\",null,s.title))))),N(\"div\",{className:\"pt-8\"},N(u.a,{href:\"/\"},N(\"a\",{className:\"text-teal-500 hover:text-teal-700\"},\"\\u2190 All Posts\"))))))}},Ff2n:function(e,t,a){\"use strict\";function n(e,t){if(null==e)return{};var a,n,c=function(e,t){if(null==e)return{};var a,n,c={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(c[a]=e[a]);return c}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(c[a]=e[a])}return c}a.d(t,\"a\",(function(){return n}))},SYun:function(e,t,a){\"use strict\";var n=\"a\",c=\"b\",r=\"c\",s=\"d\",o=\"e\",l=\"f\",i=\"g\",p=\"h\",b=\"i\",d=\"j\",m=\"k\",u=\"l\",O=\"n\",j=\"m\",N={MMMM:c,MM:r,Mo:O,YYYY:s,YY:o,dddd:l,DD:u,Do:m,h:i,H:j,mm:p,ss:b,a:d},f=[\"January\",\"Febuary\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],y=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];function h(e){return e<10?\"0\"+e:\"\"+e}e.exports=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},a=function(e){for(var t=[],a=0,c=\"\";a<e.length;){var r=e[a++];if(\"{\"===r){c&&t.push({t:n,v:c}),c=\"\";var s=\"\";for(r=e[a++];\"}\"!==r;)s+=r,r=e[a++];t.push({t:N[s]})}else c+=r}return c&&t.push({t:n,v:c}),t}(e);return{render:function(e){return function(e,t,a){for(var N,g=t.getMonth(),w=t.getFullYear(),x=t.getHours(),v=t.getSeconds(),S=t.getMinutes(),C=t.getDate(),k=\"\",I=0;I<e.length;){var M=e[I];switch(M.t){case n:k+=M.v;break;case m:k+=(N=C)%10==1&&11!=N?N+\"st\":N%10==2&&12!=N?N+\"nd\":N%10==3&&13!=N?N+\"rd\":N+\"th\";break;case r:k+=f[g].slice(0,3);break;case c:k+=f[g];break;case O:var T=g+1;a.padMonth&&(T=h(T)),k+=T;break;case s:k+=w;break;case o:k+=(w+\"\").slice(2);break;case l:k+=y[t.getDay()];break;case u:k+=a.padDays?h(C):C;break;case i:var P=0===x||12===x?12:x%12;a.padHours&&(P=h(P)),k+=P;break;case j:var D=x;a.padHours&&(D=h(D)),k+=D;break;case p:k+=h(S);break;case b:k+=h(v);break;case d:k+=x>=12?\"PM\":\"AM\"}I++}return k}(a,e,t)}}}},YCLL:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push([\"/110720-swift-types\",function(){return a(\"bzT+\")}])},YICZ:function(e,t,a){\"use strict\";t.a=\"/_next/static/media/hero-types.0fd3eb31b1dfa7b2898f6ddb00ec8594.png\"},\"bzT+\":function(e,t,a){\"use strict\";a.r(t),a.d(t,\"__N_SSG\",(function(){return b})),a.d(t,\"meta\",(function(){return d})),a.d(t,\"default\",(function(){return O}));var n=a(\"Ff2n\"),c=a(\"wx14\"),r=a(\"q1tI\"),s=a.n(r),o=a(\"7ljp\"),l=a(\"CZVI\"),i=a(\"iBhN\"),p=a(\"YICZ\"),b=(s.a.createElement,!0),d={title:\"Swift Types\",description:\"Back to basics with Swift types\",date:\"2020-11-07T12:00:00.000Z\",authors:[i.a],discussion:\"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"},m={meta:d},u=function(e){return Object(o.b)(l.a,Object(c.a)({meta:d},e))};function O(e){var t=e.components,a=Object(n.a)(e,[\"components\"]);return Object(o.b)(u,Object(c.a)({},m,a,{components:t,mdxType:\"MDXLayout\"}),Object(o.b)(\"img\",{src:p.a,alt:\"Swift Generics Hero Image\"}),Object(o.b)(\"p\",null,\"In the Swift programming language, nearly everything is based on a named type or compound type. Named types can be assigned names when created. These include \",Object(o.b)(\"em\",{parentName:\"p\"},\"classes\"),\", \",Object(o.b)(\"em\",{parentName:\"p\"},\"structures\"),\", \",Object(o.b)(\"em\",{parentName:\"p\"},\"enumerations\"),\", and \",Object(o.b)(\"em\",{parentName:\"p\"},\"protocols\"),\". Instances of user-defined named types carry the name of the given type. For example, a class named \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"MyClass\"),\" will have the type \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"MyClass\"),\". Swift also includes many standard named types for arrays, dictionaries and optional values.\"),Object(o.b)(\"div\",{class:\"rounded-md bg-blue-50 p-4\"},Object(o.b)(\"div\",{class:\"flex\"},Object(o.b)(\"div\",{class:\"flex-shrink-0\"},Object(o.b)(\"svg\",{class:\"h-5 w-5 text-blue-400\",xmlns:\"http://www.w3.org/2000/svg\",viewBox:\"0 0 20 20\",fill:\"currentColor\"},Object(o.b)(\"path\",{fillRule:\"evenodd\",d:\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",clipRule:\"evenodd\"}))),Object(o.b)(\"div\",{class:\"ml-3 flex-1 md:flex md:justify-between\"},Object(o.b)(\"p\",{class:\"text-sm leading-5 text-blue-700\"},\"This is a another post in a series intended as a personal growth exercise. As I learn and digest new things, I want to write about them to solidify my understanding.\"),Object(o.b)(\"p\",{class:\"mt-3 text-sm leading-5 md:mt-0 md:ml-6\"},Object(o.b)(\"a\",{href:\"https://fs.blog/2015/01/richard-feynman-knowing-something/\",class:\"whitespace-no-wrap font-medium text-blue-700 hover:text-blue-600 transition ease-in-out duration-150\"},\"Feynman \\u2192\"))))),Object(o.b)(\"p\",null,\"Compound types are types without a specific name. A compound type may contain other named and compound types. For example, the compound tuple type \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"(Int, (Int, Int))\"),\" contains two inner types. The first is the named \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"Int\"),\" type, the second is a compount type of \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"(Int, Int)\"),\".\"),Object(o.b)(\"p\",null,\"Properties are either stored, or computed. A stored property has a fixed value. On the other hand, a computed property is calculated every time it is are accessed. There are also simple observers on properties that listen to changes via callbacks. These observers are \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"willSet\"),\" and \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"didSet\"),\".\"),Object(o.b)(\"p\",null,\"This was very difficult for me to wrap my head around in my early Swift learning days.\"),Object(o.b)(\"h3\",null,\"Value types vs Reference types\"),Object(o.b)(\"p\",null,\"When a piece of data is saved to disk, it is saved in a container. Imagine each container having a label on the outside. Value types refer to the \",Object(o.b)(\"em\",{parentName:\"p\"},\"actual data\"),\" inside the container. Reference types refer to the label, or \",Object(o.b)(\"em\",{parentName:\"p\"},\"memory address\"),\" on the container.\"),Object(o.b)(\"pre\",{className:\"language-swift\"},Object(o.b)(\"code\",Object(c.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"class\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"SimpleClass\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"var\"),\" name \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"\"'),\"\\n\",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\\n\",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"struct\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"SimpleStruct\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"var\"),\" name \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"\"'),\"\\n\",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\\n\",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-gray-400 italic\"}),\"// Memory address is constant but data is variable\"),\"\\n\",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"let\"),\" simpleClass \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"SimpleClass\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\nsimpleClass\",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"name \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"wayne\"'),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-gray-400 italic\"}),\"// OK\"),\"\\n\\n\",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-gray-400 italic\"}),\"// Data is constant but address is variable\"),\"\\n\",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"let\"),\" simpleStruct \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"SimpleStruct\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\nsimpleStruct\",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),\"name \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"=\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-green\"}),'\"wayne\"'),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-gray-400 italic\"}),\"// Compiler error\"),\"\\n\")),Object(o.b)(\"p\",null,\"So here we have a constant (let) \",Object(o.b)(\"em\",{parentName:\"p\"},\"class\"),\" instance with a constant memory address, but its data is variable and can change at any time. This was a huge eye opener for me to learn early on.\"),Object(o.b)(\"p\",null,\"However, a constant (let) \",Object(o.b)(\"em\",{parentName:\"p\"},\"structure\"),\" instance has constant data, but a variable memory address. It will throw a compiler error every time the constant structure is changed.\"),Object(o.b)(\"p\",null,\"Convention tells us to use \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"struct\"),\" primarily, but should opt for \",Object(o.b)(\"inlineCode\",{parentName:\"p\"},\"class\"),\" when our code is designed for instances, as well as interfacing with legacy Objective-C code.\"),Object(o.b)(\"h3\",null,\"Computed Properties \\u2014 Getters & Setters\"),Object(o.b)(\"p\",null,\"Computed properties have special functions for getting and setting of property values. It's value is determined by the getter function every time it's accessed, instead of some stored property with a specific value.\"),Object(o.b)(\"p\",null,\"Getter functions can retrieve data from storage and setter functions can assign the data to storage directly.\"),Object(o.b)(\"pre\",{className:\"language-swift\"},Object(o.b)(\"code\",Object(c.a)({parentName:\"pre\"},{className:\"language-Swift\"}),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"var\"),\" randomInteger\",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"Int\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n  \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"get\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"{\"),\"\\n    \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"return\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"100\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"*\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"Int\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-blue\"}),\"random\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"(\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-purple\"}),\"in\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\":\"),\" \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"0\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\".\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"\"}),\"10\"),Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\")\"),\"\\n  \",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\",Object(o.b)(\"span\",Object(c.a)({parentName:\"code\"},{className:\"text-code-white\"}),\"}\"),\"\\n\")),Object(o.b)(\"p\",null,\"Setter functions are optional in computed properties. When no setter function is defined, it's treated as a normal stored, read-only property.\"),Object(o.b)(\"h3\",null,\"Summary\"),Object(o.b)(\"ul\",null,Object(o.b)(\"li\",{parentName:\"ul\"},\"Reference type instance points to the memory address, not the data\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Value type instance points to the data but not the memory address\"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Getter and setter functions are called when computed properties are accessed or modified.\")),Object(o.b)(\"h3\",null,\"Resources:\"),Object(o.b)(\"ul\",null,Object(o.b)(\"li\",{parentName:\"ul\"},Object(o.b)(\"a\",Object(c.a)({parentName:\"li\"},{href:\"https://fluffy.es/reference-vs-value-type/\"}),\"Understanding Reference and Value types\")),Object(o.b)(\"li\",{parentName:\"ul\"},Object(o.b)(\"a\",Object(c.a)({parentName:\"li\"},{href:\"https://developer.apple.com/documentation/swift/choosing_between_structures_and_classes\"}),\"Choosing Between Structures and Classes\"))))}O.isMDXComponent=!0},dHPk:function(e,t,a){\"use strict\";t.a=\"/_next/static/media/waynedahlberg.ec5a7624841b4d34c6fd54883892118f.jpg\"},iBhN:function(e,t,a){\"use strict\";a.d(t,\"a\",(function(){return n}));var n={name:\"Wayne Dahlberg\",twitter:\"@waynedahlberg\",avatar:a(\"dHPk\").a}},wx14:function(e,t,a){\"use strict\";function n(){return(n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}a.d(t,\"a\",(function(){return n}))}},[[\"YCLL\",0,1,2,3]]]);","extractedComments":[]}