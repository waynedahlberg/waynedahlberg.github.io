{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Post from \"@/components/Post\";\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./IMG_0481.jpg\";\nimport image2 from \"./IMG_0924.jpg\";\nimport image3 from \"./IMG_0950.jpg\";\nimport image4 from \"./IMG_1125.jpg\";\nimport image5 from \"./R2D2-July1-8306.jpg\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `July Update`,\n  description: `A lot has happened`,\n  date: \"2016-07-13T14:24:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst layoutProps = {\n  meta\n};\n\nconst MDXLayout = props => mdx(Post, _extends({\n  meta: meta\n}, props));\n\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Waiting for parts is the name of the game at this point. Critical parts suppliers are hit and miss. I’ve been attached to the Tapatalk mobile app to keep tabs on parts runs and availability countdowns.`), mdx(\"p\", null, `So far so good. I’ve managed to secure the CS:R aluminum legs from WorrParts, along with the matching diet horseshoes and shims that mount to the upper portion of the outside legs. The booster covers came in from IA Parts, and man they are slick. Off to a good start on the legs. Over the next few months I’ll try to pick up the leg struts, shoulder buttons, and under shoulder details. Relatively smaller parts, but no less expensive for their size.`), mdx(\"p\", null, `Still need to find all three ankles and all three feet.`), mdx(\"p\", null, `Mounted some of the HP’s with painters tape just to get an idea of how it’s going to look once the parts are attached. Also tried out my first dome drilling and use of the captive studs. Seems pretty straight forward, however, I didn’t like how the captive studs are a little visible even with the outer dome placed on top. Hmm. Will have to do more research.`), mdx(\"img\", {\n    src: image1,\n    alt: \"july update\"\n  }), mdx(\"img\", {\n    src: image2,\n    alt: \"july update\"\n  }), mdx(\"img\", {\n    src: image3,\n    alt: \"july update\"\n  }), mdx(\"img\", {\n    src: image4,\n    alt: \"july update\"\n  }), mdx(\"img\", {\n    src: image5,\n    alt: \"july update\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}