{"ast":null,"code":"var _jsxFileName = \"/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/110720-hello-world/index.mdx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Post from \"@/components/Post\";\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./ia-writer-working-copy.jpg\";\nimport image2 from \"./nextjs-tailwind-vercel.jpg\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Hello World ðŸ‘‹`,\n  description: `This is the first post of my blog.`,\n  date: \"2020-11-07T19:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst layoutProps = {\n  meta\n};\n\nconst MDXLayout = props => mdx(Post, _extends({\n  meta: meta\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 30\n  }\n}));\n\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, `This blog is a long time coming. Like many others, the rise of social media in the last decade has all but squashed my desire for self-publishing. This is my attempt to recapture that desire, and lingering writing skills, habits. Numerous friends and peers have also revved up their blogging engines, and so with this post I turn the ignition to `, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 358\n    }\n  }, mdx(\"em\", {\n    parentName: \"strong\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 381\n    }\n  }, `â€”STARTâ€”`)), `.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, `I have played around a bit with `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.tailwindcss.com\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 44\n    }\n  }), `Tailwind CSS`), ` on a few side projects. I knew I wanted it for that clean look and feel. Plus, I love the way `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/adamwathan\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 129\n    }\n  }), `Adam`), ` and `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/steveschoger\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 31\n    }\n  }), `Steve`), ` think. If you're looking to step up your design skills check out their new book, `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://refactoringui.com/\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 109\n    }\n  }), mdx(\"em\", {\n    parentName: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }, `RefactoringUI`)), `. This eBook enjoys a place on my mantle right next to Norman's `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 123\n    }\n  }), mdx(\"em\", {\n    parentName: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, `Design of Everyday Things`)), `. It's that good.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, `Next up was which stack to use because Wordpress is on my do-not-fly list. I consulted a friend on thier Django/Python blog setup, but felt like I needed something different, or at least maintainable `, mdx(\"em\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 212\n    }\n  }, `for me`), `. Static site generators like Jekyll and Gatsby are very interesting. I went down that road and started learning more about obfuscations of react than necessary to for a simple, but extensible blog.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, `Long story not-so-long, I found `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://nextjs.org\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 44\n    }\n  }), `Next.js`), `. Integration with Tailwind CSS was straightforward. Posts are simply created in markdown and statically rendered and pre-loaded for lightning speed. In addition to markdown, I'm still able to learn more about and integrate custom react components within the markdown syntax. Something that was missing with my other attempts.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, `This blog is served up via continuous integration on the `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://vercel.com\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 69\n    }\n  }), `Vercel`), ` deployment platform. Git pushes trigger re-rendering and serving automatically. I have a lot more to learn here, but so far I'm a big fan.`), mdx(\"img\", {\n    src: image2,\n    alt: \"Backend stack and deployment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, `Okay. So everything is up and running and I'm able to compose, save .md, commit and push post from my laptop. I wondered if I could do the same on the go with an iOS / iPadOS setup?. Turns out you can with a few paid apps.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, `First, I compose the posts in a great app called `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://google.com\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 61\n    }\n  }), `IA Writer`), `. From there, I import the markdown output into a Git manager for iPad called `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://google.com\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 109\n    }\n  }), `Working Copy`), `. I duplicate a previous post, modify the meta data for title, date and a few other housekeeping details.`), mdx(\"img\", {\n    src: image1,\n    alt: \"Early days of Verses interface.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, `The great thing about Next.js is that it allows for embedding fully modern, extensible components into your blog posts, all while retaiing the ease and simplicity of importing markdown for final post parsing.`));\n}\n;\nMDXContent.isMDXComponent = true;","map":{"version":3,"sources":["/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/110720-hello-world/index.mdx"],"names":["React","mdx","Post","waynedahlberg","image1","image2","getStaticProps","meta","title","description","date","authors","discussion","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Post from \"@/components/Post\"\n\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./ia-writer-working-copy.jpg\";\nimport image2 from \"./nextjs-tailwind-vercel.jpg\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Hello World ðŸ‘‹`,\n  description: `This is the first post of my blog.`,\n  date: \"2020-11-07T19:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = (props) => <Post meta={meta} {...props} />\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <p>{`This blog is a long time coming. Like many others, the rise of social media in the last decade has all but squashed my desire for self-publishing. This is my attempt to recapture that desire, and lingering writing skills, habits. Numerous friends and peers have also revved up their blogging engines, and so with this post I turn the ignition to `}<strong parentName=\"p\"><em parentName=\"strong\">{`â€”STARTâ€”`}</em></strong>{`.`}</p>\n    <p>{`I have played around a bit with `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.tailwindcss.com\"\n      }}>{`Tailwind CSS`}</a>{` on a few side projects. I knew I wanted it for that clean look and feel. Plus, I love the way `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/adamwathan\"\n      }}>{`Adam`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://twitter.com/steveschoger\"\n      }}>{`Steve`}</a>{` think. If you're looking to step up your design skills check out their new book, `}<a parentName=\"p\" {...{\n        \"href\": \"https://refactoringui.com/\"\n      }}><em parentName=\"a\">{`RefactoringUI`}</em></a>{`. This eBook enjoys a place on my mantle right next to Norman's `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.amazon.com/Design-Everyday-Things-Revised-Expanded/dp/0465050654\"\n      }}><em parentName=\"a\">{`Design of Everyday Things`}</em></a>{`. It's that good.`}</p>\n    <p>{`Next up was which stack to use because Wordpress is on my do-not-fly list. I consulted a friend on thier Django/Python blog setup, but felt like I needed something different, or at least maintainable `}<em parentName=\"p\">{`for me`}</em>{`. Static site generators like Jekyll and Gatsby are very interesting. I went down that road and started learning more about obfuscations of react than necessary to for a simple, but extensible blog.`}</p>\n    <p>{`Long story not-so-long, I found `}<a parentName=\"p\" {...{\n        \"href\": \"https://nextjs.org\"\n      }}>{`Next.js`}</a>{`. Integration with Tailwind CSS was straightforward. Posts are simply created in markdown and statically rendered and pre-loaded for lightning speed. In addition to markdown, I'm still able to learn more about and integrate custom react components within the markdown syntax. Something that was missing with my other attempts.`}</p>\n    <p>{`This blog is served up via continuous integration on the `}<a parentName=\"p\" {...{\n        \"href\": \"https://vercel.com\"\n      }}>{`Vercel`}</a>{` deployment platform. Git pushes trigger re-rendering and serving automatically. I have a lot more to learn here, but so far I'm a big fan.`}</p>\n    <img src={image2} alt=\"Backend stack and deployment\" />\n    <p>{`Okay. So everything is up and running and I'm able to compose, save .md, commit and push post from my laptop. I wondered if I could do the same on the go with an iOS / iPadOS setup?. Turns out you can with a few paid apps.`}</p>\n    <p>{`First, I compose the posts in a great app called `}<a parentName=\"p\" {...{\n        \"href\": \"http://google.com\"\n      }}>{`IA Writer`}</a>{`. From there, I import the markdown output into a Git manager for iPad called `}<a parentName=\"p\" {...{\n        \"href\": \"http://google.com\"\n      }}>{`Working Copy`}</a>{`. I duplicate a previous post, modify the meta data for title, date and a few other housekeeping details.`}</p>\n    <img src={image1} alt=\"Early days of Verses interface.\" />\n    <p>{`The great thing about Next.js is that it allows for embedding fully modern, extensible components into your blog posts, all while retaiing the ease and simplicity of importing markdown for final post parsing.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}