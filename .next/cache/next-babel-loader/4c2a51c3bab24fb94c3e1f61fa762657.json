{"ast":null,"code":"var _jsxFileName = \"/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/110720-hello-world/index.mdx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Post from \"@/components/Post\";\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./ia-writer-working-copy.jpg\";\nimport image2 from \"./nextjs-tailwind-vercel.jpg\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Hello World ðŸ‘‹`,\n  description: `This is the first post of my blog.`,\n  date: \"2020-11-07T19:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst layoutProps = {\n  meta\n};\n\nconst MDXLayout = props => mdx(Post, _extends({\n  meta: meta\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 30\n  }\n}));\n\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, `This blog is a long time coming. Like many others, the rise of social media in the last decade has all but squashed my desire for self-publishing. This is my attempt to recapture that desire, and lingering writing skills, habits. Numerous friends and peers have also revved up their blogging engines, and so with this post I turn the ignition to `, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 358\n    }\n  }, mdx(\"em\", {\n    parentName: \"strong\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 381\n    }\n  }, `â€”STARTâ€”`)), `.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, `Having played around with `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.tailwindcss.com\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 38\n    }\n  }), `Tailwind CSS`), ` in a few side projects, I knew I wanted it to control the look and feel of the blog. Plus, I love the way Adam and Steve think.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, `Next up was which stack to use because Wordpress is on my permanant blacklist. Static site generators like Hugo, Jekyll and Gatsby are very interesting.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, `I remember attending Wordpress WordCamp on Novel campus in 2007. Listening to Matt Mullenweg and friends talk about the fledgling blogging platform. That platform has since become, IMO, one of the most bloating pieces of software out there.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, `I've been on the hunt for a solid blogging solution. Static site generators like Jekyll and Gatsby were very appealing to me, but the configuration and setup was bumpy. I found myself learning more about react routes and obscure javascript that I needed for a simple blog.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, `I also wanted by blog to look and feel nice. A clean interface that let the content shine.`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, `In order to look clean, I opted to use the Tailwind CSS framework. I've been really impresssed with what that team has been releasing recently. One of the articles on their site shows how to integrate Tailwind with the Next.js framework. After going through some basic and intermediate examples, I felt Next.js was what I wanted to use. Next.js is created by Vercel, a CI static content management service. It took some finagling, but I was able to connect my blog repo (Next.js) to Vercel, and attach a CI script to run every time Git triggered an update.`), mdx(\"img\", {\n    src: image2,\n    alt: \"Early days of Verses interface.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, `Everything is up and running and I'm able to post from my laptop. But I wondered if I could do the same with iOS / iPadOS?. The answer is a resounding YES, with a few caveats. First, I compose the posts in a great app called `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://google.com\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 237\n    }\n  }), `IA Writer`), `. From there, I import the markdown output into a Git manager for iPad called `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://google.com\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 109\n    }\n  }), `Working Copy`), `. I duplicate a previous post, modify the meta data for title, date and a few other things.`), mdx(\"img\", {\n    src: image1,\n    alt: \"Early days of Verses interface.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, `The great thing about Next.js is that it allows for embedding fully modern, extensible components into your blog posts, all while retaiing the ease and simplicity of importing markdown for final post parsing.`));\n}\n;\nMDXContent.isMDXComponent = true;","map":{"version":3,"sources":["/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/110720-hello-world/index.mdx"],"names":["React","mdx","Post","waynedahlberg","image1","image2","getStaticProps","meta","title","description","date","authors","discussion","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Post from \"@/components/Post\"\n\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./ia-writer-working-copy.jpg\";\nimport image2 from \"./nextjs-tailwind-vercel.jpg\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Hello World ðŸ‘‹`,\n  description: `This is the first post of my blog.`,\n  date: \"2020-11-07T19:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = (props) => <Post meta={meta} {...props} />\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <p>{`This blog is a long time coming. Like many others, the rise of social media in the last decade has all but squashed my desire for self-publishing. This is my attempt to recapture that desire, and lingering writing skills, habits. Numerous friends and peers have also revved up their blogging engines, and so with this post I turn the ignition to `}<strong parentName=\"p\"><em parentName=\"strong\">{`â€”STARTâ€”`}</em></strong>{`.`}</p>\n    <p>{`Having played around with `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.tailwindcss.com\"\n      }}>{`Tailwind CSS`}</a>{` in a few side projects, I knew I wanted it to control the look and feel of the blog. Plus, I love the way Adam and Steve think.`}</p>\n    <p>{`Next up was which stack to use because Wordpress is on my permanant blacklist. Static site generators like Hugo, Jekyll and Gatsby are very interesting.`}</p>\n    <p>{`I remember attending Wordpress WordCamp on Novel campus in 2007. Listening to Matt Mullenweg and friends talk about the fledgling blogging platform. That platform has since become, IMO, one of the most bloating pieces of software out there.`}</p>\n    <p>{`I've been on the hunt for a solid blogging solution. Static site generators like Jekyll and Gatsby were very appealing to me, but the configuration and setup was bumpy. I found myself learning more about react routes and obscure javascript that I needed for a simple blog.`}</p>\n    <p>{`I also wanted by blog to look and feel nice. A clean interface that let the content shine.`}</p>\n    <p>{`In order to look clean, I opted to use the Tailwind CSS framework. I've been really impresssed with what that team has been releasing recently. One of the articles on their site shows how to integrate Tailwind with the Next.js framework. After going through some basic and intermediate examples, I felt Next.js was what I wanted to use. Next.js is created by Vercel, a CI static content management service. It took some finagling, but I was able to connect my blog repo (Next.js) to Vercel, and attach a CI script to run every time Git triggered an update.`}</p>\n    <img src={image2} alt=\"Early days of Verses interface.\" />\n    <p>{`Everything is up and running and I'm able to post from my laptop. But I wondered if I could do the same with iOS / iPadOS?. The answer is a resounding YES, with a few caveats. First, I compose the posts in a great app called `}<a parentName=\"p\" {...{\n        \"href\": \"http://google.com\"\n      }}>{`IA Writer`}</a>{`. From there, I import the markdown output into a Git manager for iPad called `}<a parentName=\"p\" {...{\n        \"href\": \"http://google.com\"\n      }}>{`Working Copy`}</a>{`. I duplicate a previous post, modify the meta data for title, date and a few other things.`}</p>\n    <img src={image1} alt=\"Early days of Verses interface.\" />\n    <p>{`The great thing about Next.js is that it allows for embedding fully modern, extensible components into your blog posts, all while retaiing the ease and simplicity of importing markdown for final post parsing.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}