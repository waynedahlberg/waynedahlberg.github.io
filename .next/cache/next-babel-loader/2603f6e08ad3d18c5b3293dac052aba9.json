{"ast":null,"code":"var _jsxFileName = \"/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/swift-ranges/index.mdx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Post from \"@/components/Post\";\nimport { waynedahlberg } from \"@/authors\";\nimport hero from \"./hero-ranges.png\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Swift Ranges`,\n  description: `The basics of Swift Enumerations.`,\n  date: \"2020-11-24T12:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }));\n};\n\nconst layoutProps = {\n  meta\n};\n\nconst MDXLayout = props => mdx(Post, _extends({\n  meta: meta\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 30\n  }\n}));\n\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }), mdx(\"img\", {\n    src: hero,\n    alt: \"Swift Ranges hero image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, `Ranges are a generic Swift Structures for selecting a range, or a limited subset, of an existing type. Ranges are used commonly for identifying elements between the lowest and highest values in a set.`), mdx(\"div\", {\n    class: \"rounded-md bg-blue-50 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, mdx(\"div\", {\n    class: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, mdx(\"div\", {\n    class: \"flex-shrink-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, mdx(\"svg\", {\n    class: \"h-5 w-5 text-blue-400\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",\n    clipRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }))), mdx(\"div\", {\n    class: \"ml-3 flex-1 md:flex md:justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    class: \"text-sm leading-5 text-blue-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"This is a another post in a series intended as a personal growth exercise. As I learn and digest new things, I want to write about them to solidify my understanding.\"), mdx(\"p\", {\n    class: \"mt-3 text-sm leading-5 md:mt-0 md:ml-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, mdx(\"a\", {\n    href: \"https://fs.blog/2015/01/richard-feynman-knowing-something/\",\n    class: \"whitespace-no-wrap font-medium text-blue-700 hover:text-blue-600 transition ease-in-out duration-150\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Feynman \\u2192\"))))), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, `Kinds of Ranges`), mdx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, `Closed Range`), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, `A `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 14\n    }\n  }, `Closed Range`), ` is declared with the `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 96\n    }\n  }, `...`), ` operator between a pair of Integer values. The left value being the `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 216\n    }\n  }, `lowerBound`), ` and the right value being `, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 301\n    }\n  }, `upperBound`), `. The Closed Range `, mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 378\n    }\n  }, `includes`), ` the upperBound value.`), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }), `let`), ` range `, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 37\n    }\n  }), `:`), ` `, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  }), `ClosedRange`), ` `, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 39\n    }\n  }), `=`), ` `, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }), `0`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }\n  }), `.`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 24\n    }\n  }), `.`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }\n  }), `.`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 24\n    }\n  }), `5`), `\n`, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }\n  }), `print`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 28\n    }\n  }), `(`), `range`, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }), `)`), ` `, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }), `// 0...5`), `\n`, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }\n  }), `print`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 28\n    }\n  }), `(`), `range`, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }), `.`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 24\n    }\n  }), `first`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 28\n    }\n  }), `)`), ` `, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }), `// Optional(0)`), `\n`, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }\n  }), `print`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 28\n    }\n  }), `(`), `range`, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }), `.`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 24\n    }\n  }), `last`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 27\n    }\n  }), `)`), ` `, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }), `// Optional(10)`), `\n\n`, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 3\n    }\n  }), `for`), ` index `, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }), `in`), ` range `, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 36\n    }\n  }), `{`), `\n  `, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }), `print`), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 28\n    }\n  }), `(`), `index`, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }), `)`), ` `, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 29\n    }\n  }), `// prints consecutivly, values from 0 to 5`), `\n`, mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 3\n    }\n  }), `}`), `\n`)));\n}\n;\nMDXContent.isMDXComponent = true;","map":{"version":3,"sources":["/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/swift-ranges/index.mdx"],"names":["React","mdx","Post","waynedahlberg","hero","getStaticProps","meta","title","description","date","authors","discussion","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAO,MAAMC,IAAI,GAAG;AAClBC,EAAAA,KAAK,EAAG,cADU;AAElBC,EAAAA,WAAW,EAAG,mCAFI;AAGlBC,EAAAA,IAAI,EAAE,0BAHY;AAIlBC,EAAAA,OAAO,EAAE,CAACP,aAAD,CAJS;AAKlBQ,EAAAA,UAAU,EAAE;AALM,CAAb;;AAOP,MAAMC,aAAa,GAAGC,IAAI,IAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,EAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,SAAO,wBAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAHD;;AAKA,MAAMG,WAAW,GAAG;AAClBZ,EAAAA;AADkB,CAApB;;AAGA,MAAMa,SAAS,GAAIJ,KAAD,IAAW,IAAC,IAAD;AAAM,EAAA,IAAI,EAAET;AAAZ,GAAsBS,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA7B;;AACA,eAAe,SAASK,UAAT,OAGZ;AAAA,MAHgC;AACjCC,IAAAA;AADiC,GAGhC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,eAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKL;AAAK,IAAA,GAAG,EAAEjB,IAAV;AAAgB,IAAA,GAAG,EAAC,yBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALK,EAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,0MAAL,CANK,EAOL;AAAK,IAAA,KAAK,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,uBAAX;AAAmC,IAAA,KAAK,EAAC,4BAAzC;AAAsE,IAAA,OAAO,EAAC,WAA9E;AAA0F,IAAA,IAAI,EAAC,cAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAC,SAAf;AAAyB,IAAA,CAAC,EAAC,kIAA3B;AAA8J,IAAA,QAAQ,EAAC,SAAvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,EAME;AAAK,IAAA,KAAK,EAAC,wCAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,KAAK,EAAC,iCAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6KADF,EAME;AAAG,IAAA,KAAK,EAAC,wCAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,4DAAR;AAAqE,IAAA,KAAK,EAAC,sGAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CANF,CANF,CADE,CAPK,EA4BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,iBAAN,CA5BK,EA6BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,cAAN,CA7BK,EA8BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,IAAL,EAAS;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,cAA7B,CAAT,EAAmE,wBAAnE,EAA2F;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,KAA7B,CAA3F,EAA4I,uEAA5I,EAAmN;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,YAA7B,CAAnN,EAA2Q,6BAA3Q,EAAwS;AAAY,IAAA,UAAU,EAAC,GAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6B,YAA7B,CAAxS,EAAgW,qBAAhW,EAAqX;AAAQ,IAAA,UAAU,EAAC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB,UAAzB,CAArX,EAAma,wBAAna,CA9BK,EA+BL,oBAAS;AACP,iBAAa;AADN,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEG;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA2B;AAC1B,iBAAa;AADa,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEE;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC3B,iBAAa;AADc,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEI,KAFJ,CAFF,EAIoB,SAJpB,EAI6B;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACtD,iBAAa;AADyC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEvB,GAFuB,CAJ7B,EAMkB,GANlB,EAMqB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC9C,iBAAa;AADiC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEf,aAFe,CANrB,EAQ4B,GAR5B,EAQ+B;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACxD,iBAAa;AAD2C,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEzB,GAFyB,CAR/B,EAUkB,GAVlB,EAUqB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC9C,iBAAa;AADiC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEf,GAFe,CAVrB,EAYgB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACzC,iBAAa;AAD4B,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEV,GAFU,CAZhB,EAcgB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACzC,iBAAa;AAD4B,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEV,GAFU,CAdhB,EAgBgB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACzC,iBAAa;AAD4B,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEV,GAFU,CAhBhB,EAkBgB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACzC,iBAAa;AAD4B,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEV,GAFU,CAlBhB,EAoBkB;CApBlB,EAqBL;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACpB,iBAAa;AADO,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEW,OAFX,CArBK,EAuBoB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC7C,iBAAa;AADgC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEd,GAFc,CAvBpB,EAyBkB,OAzBlB,EAyByB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAClD,iBAAa;AADqC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEnB,GAFmB,CAzBzB,EA2BkB,GA3BlB,EA2BqB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC9C,iBAAa;AADiC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEf,UAFe,CA3BrB,EA6ByB;CA7BzB,EA8BL;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACpB,iBAAa;AADO,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEW,OAFX,CA9BK,EAgCoB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC7C,iBAAa;AADgC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEd,GAFc,CAhCpB,EAkCkB,OAlClB,EAkCyB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAClD,iBAAa;AADqC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEnB,GAFmB,CAlCzB,EAoCgB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACzC,iBAAa;AAD4B,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEV,OAFU,CApChB,EAsCoB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC7C,iBAAa;AADgC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEd,GAFc,CAtCpB,EAwCkB,GAxClB,EAwCqB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC9C,iBAAa;AADiC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEf,gBAFe,CAxCrB,EA0C+B;CA1C/B,EA2CL;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACpB,iBAAa;AADO,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEW,OAFX,CA3CK,EA6CoB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC7C,iBAAa;AADgC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEd,GAFc,CA7CpB,EA+CkB,OA/ClB,EA+CyB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAClD,iBAAa;AADqC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEnB,GAFmB,CA/CzB,EAiDgB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACzC,iBAAa;AAD4B,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEV,MAFU,CAjDhB,EAmDmB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC5C,iBAAa;AAD+B,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEb,GAFa,CAnDnB,EAqDkB,GArDlB,EAqDqB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC9C,iBAAa;AADiC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEf,iBAFe,CArDrB,EAuDgC;;CAvDhC,EAyDL;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACpB,iBAAa;AADO,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEW,KAFX,CAzDK,EA2DoB,SA3DpB,EA2D6B;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACtD,iBAAa;AADyC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEvB,IAFuB,CA3D7B,EA6DmB,SA7DnB,EA6D4B;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACrD,iBAAa;AADwC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEtB,GAFsB,CA7D5B,EA+DkB;GA/DlB,EAgEH;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACtB,iBAAa;AADS,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAES,OAFT,CAhEG,EAkEoB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC7C,iBAAa;AADgC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEd,GAFc,CAlEpB,EAoEkB,OApElB,EAoEyB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAClD,iBAAa;AADqC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEnB,GAFmB,CApEzB,EAsEkB,GAtElB,EAsEqB;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AAC9C,iBAAa;AADiC,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEf,4CAFe,CAtErB,EAwE2D;CAxE3D,EAyEL;AAAM,IAAA,UAAU,EAAC;AAAjB,KAA4B;AACpB,iBAAa;AADO,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEW,GAFX,CAzEK,EA2EkB;CA3ElB,CAFH,CA/BK,CAAP;AAgHD;AAED;AACAgB,UAAU,CAACE,cAAX,GAA4B,IAA5B","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Post from \"@/components/Post\"\n\nimport { waynedahlberg } from \"@/authors\";\nimport hero from \"./hero-ranges.png\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Swift Ranges`,\n  description: `The basics of Swift Enumerations.`,\n  date: \"2020-11-24T12:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = (props) => <Post meta={meta} {...props} />\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <img src={hero} alt=\"Swift Ranges hero image\" />\n    <p>{`Ranges are a generic Swift Structures for selecting a range, or a limited subset, of an existing type. Ranges are used commonly for identifying elements between the lowest and highest values in a set.`}</p>\n    <div class=\"rounded-md bg-blue-50 p-4\">\n  <div class=\"flex\">\n    <div class=\"flex-shrink-0\">\n      <svg class=\"h-5 w-5 text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n      </svg>\n    </div>\n    <div class=\"ml-3 flex-1 md:flex md:justify-between\">\n      <p class=\"text-sm leading-5 text-blue-700\">\n        This is a another post in a series intended as a personal growth\n        exercise. As I learn and digest new things, I want to write about them\n        to solidify my understanding.\n      </p>\n      <p class=\"mt-3 text-sm leading-5 md:mt-0 md:ml-6\">\n        <a href=\"https://fs.blog/2015/01/richard-feynman-knowing-something/\" class=\"whitespace-no-wrap font-medium text-blue-700 hover:text-blue-600 transition ease-in-out duration-150\">\n          Feynman &rarr;\n        </a>\n      </p>\n    </div>\n  </div>\n    </div>\n    <h2>{`Kinds of Ranges`}</h2>\n    <h3>{`Closed Range`}</h3>\n    <p>{`A `}<inlineCode parentName=\"p\">{`Closed Range`}</inlineCode>{` is declared with the `}<inlineCode parentName=\"p\">{`...`}</inlineCode>{` operator between a pair of Integer values. The left value being the `}<inlineCode parentName=\"p\">{`lowerBound`}</inlineCode>{` and the right value being `}<inlineCode parentName=\"p\">{`upperBound`}</inlineCode>{`. The Closed Range `}<strong parentName=\"p\">{`includes`}</strong>{` the upperBound value.`}</p>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`let`}</span>{` range `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`ClosedRange`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`0`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`5`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span>{`range`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// 0...5`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span>{`range`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`first`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// Optional(0)`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span>{`range`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`last`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// Optional(10)`}</span>{`\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`for`}</span>{` index `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`in`}</span>{` range `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span>{`index`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// prints consecutivly, values from 0 to 5`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}