{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Post from \"@/components/Post\";\nimport { waynedahlberg } from \"@/authors\";\nimport image from \"./surrounds.jpg\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Aluminum Logic Surrounds`,\n  description: `Very first part has arrived`,\n  date: \"2016-02-10T14:24:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst layoutProps = {\n  meta\n};\n\nconst MDXLayout = props => mdx(Post, _extends({\n  meta: meta\n}, props));\n\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `Pretty pumped right now. The very first of many parts arrived today. I was lucky to get in on the 2nd batch of `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://astromech.net/forums/showthread.php?26696-BC-Approved-Aluminum-Logic-Surrounds-Set-100-(January-2016)-Closed-Manufacturing&p=356528#post356528\"\n  }), `Jose Medina’s Aluminum Logic Surrounds run`), `.`), mdx(\"p\", null, `These are high quality, precision parts machined in a CNC Mill. Now just waiting for JoyMonkey lights to fit them into. After many hours of research, I’m leaning toward an all aluminum R2. It really doesn’t get more expensive than that, unless you favor stainless steel. Lots of people are making their frames and legs out of particle board, but to me, a wooden droid doesn’t make sense. I’m not concerned about the perceived added weight, or frankly the cost. This project will last at least a year and a half, so throwing money at every once in a while, I’m okay with – as long as there are no wooden parts on my Astromech. I may capitulate and go the 3D printed route for some of the facia, but this is a droid. It needs to be solid metal.`), mdx(\"img\", {\n    src: image,\n    alt: \"Logic Surrounds\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}