{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/swift-ranges/index.mdx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Post from \"@/components/Post\";\nimport { waynedahlberg } from \"@/authors\";\nimport hero from \"./hero-ranges.png\";\nexport var __N_SSG = true;\nexport var meta = {\n  title: \"Swift Ranges\",\n  description: \"The basics of Swift Enumerations.\",\n  date: \"2020-11-24T12:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 10\n      }\n    }));\n  };\n};\n\nvar layoutProps = {\n  meta: meta\n};\n\nvar MDXLayout = function MDXLayout(props) {\n  return mdx(Post, _extends({\n    meta: meta\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 30\n    }\n  }));\n};\n\n_c = MDXLayout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }\n  }), mdx(\"img\", {\n    src: hero,\n    alt: \"Swift Ranges hero image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, \"Ranges are generic Swift Structures for selecting a range, or a limited subset, of an existing type. Ranges are used commonly for identifying elements between the lowest and highest values in a set.\"), mdx(\"div\", {\n    \"class\": \"rounded-md bg-blue-50 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, mdx(\"div\", {\n    \"class\": \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, mdx(\"div\", {\n    \"class\": \"flex-shrink-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, mdx(\"svg\", {\n    \"class\": \"h-5 w-5 text-blue-400\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",\n    clipRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }))), mdx(\"div\", {\n    \"class\": \"ml-3 flex-1 md:flex md:justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    \"class\": \"text-sm leading-5 text-blue-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"This is a another post in a series intended as a personal growth exercise. As I learn and digest new things, I want to write about them to solidify my understanding.\"), mdx(\"p\", {\n    \"class\": \"mt-3 text-sm leading-5 md:mt-0 md:ml-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, mdx(\"a\", {\n    href: \"https://fs.blog/2015/01/richard-feynman-knowing-something/\",\n    \"class\": \"whitespace-no-wrap font-medium text-blue-700 hover:text-blue-600 transition ease-in-out duration-150\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Feynman \\u2192\"))))), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, \"Kinds of Ranges\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, \"Swift gives us two ways of creating ranges. Half-Open range, and Closed Range.\"), mdx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, \"Half-Open Range\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, \"The \", mdx(\"em\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }\n  }, \"Half-Open\"), \" range operator is declared with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 90\n    }\n  }, \"..<\"), \" between a numeric pair.\\nUsing a \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Range\"), \" instance, you can quickly check to see if a value is contained in a particular range of values. This creates a range up to but \", mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 192\n    }\n  }, \"not\"), \" including the upper bound value.\"), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 10\n    }\n  }), \"let\"), \" underFive \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 41\n    }\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }), \"0.0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 26\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 24\n    }\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 24\n    }\n  }), \"5.0\"), \"\\nunderFive\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 24\n    }\n  }), \"contains\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 31\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 24\n    }\n  }), \"3.14\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 27\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 29\n    }\n  }), \"// true\"), \"\\nunderFive\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 24\n    }\n  }), \"contains\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 31\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 24\n    }\n  }), \"6.28\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 27\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }), \"// false\"), \"\\nunderFive\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 24\n    }\n  }), \"contains\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 31\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 24\n    }\n  }), \"5.0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 26\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }), \"// false\"), \"\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }, \"Ranges help in \", mdx(\"em\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 27\n    }\n  }, \"Switch\"), \" statements, using them for your cases. Consider the following:\"), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 10\n    }\n  }), \"let\"), \" score \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 29\n    }\n  }), \"92\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 3\n    }\n  }), \"switch\"), \" score \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 40\n    }\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 32\n    }\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 24\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 24\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 24\n    }\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 24\n    }\n  }), \"50\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 25\n    }\n  }), \":\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 28\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 24\n    }\n  }), \"\\\"Fail\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 29\n    }\n  }), \")\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 5\n    }\n  }), \"case\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 32\n    }\n  }), \"50\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 24\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 24\n    }\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 24\n    }\n  }), \"90\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 25\n    }\n  }), \":\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 28\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 24\n    }\n  }), \"\\\"Pass\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }), \")\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 5\n    }\n  }), \"default\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 30\n    }\n  }), \":\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 28\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 24\n    }\n  }), \"\\\"Excellent\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 34\n    }\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 3\n    }\n  }), \"}\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }), \"// prints \\\"Excellent\\\"\"), \"\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, \"Range instances can represent an empty interval, unlike \", mdx(\"em\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 68\n    }\n  }, \"Closed Range\"), \"(see below.)\"), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 10\n    }\n  }), \"let\"), \" empty \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 29\n    }\n  }), \"0.0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 26\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 24\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 24\n    }\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 24\n    }\n  }), \"0.0\"), \"\\nempty\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 8\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 24\n    }\n  }), \"contains\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 31\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 24\n    }\n  }), \"0.0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 26\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 29\n    }\n  }), \"// false\"), \"\\nempty\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 8\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 24\n    }\n  }), \"isEmpty\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 35\n    }\n  }), \"// true\"), \"\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }\n  }, mdx(\"em\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 8\n    }\n  }, \"Range\"), \" can also be used to specify a collection of consecutive, \", mdx(\"em\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 103\n    }\n  }, \"strideable\"), \" values, usually Integers. The range can be used in \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 197\n    }\n  }, \"for-in\"), \" loops or with any sequence or collection method. The results of the range include all values up to, but \", mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 356\n    }\n  }, \"not\"), \" including the upperBound.\"), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 10\n    }\n  }), \"for\"), \" n \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 33\n    }\n  }), \"in\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 30\n    }\n  }), \"3\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 24\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 24\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 24\n    }\n  }), \"<\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 24\n    }\n  }), \"5\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 29\n    }\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 28\n    }\n  }), \"(\"), \"n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }), \")\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 3\n    }\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 3\n    }\n  }), \"// prints \\\"3\\\"\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 3\n    }\n  }), \"// prints \\\"4\\\"\"), \"\\n\")), mdx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 5\n    }\n  }, \"Closed Range\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 5\n    }\n  }, \"A \", mdx(\"em\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 14\n    }\n  }, \"Closed\"), \" range operator is declared with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 85\n    }\n  }, \"...\"), \" between a pair of numeric values. The left value being the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 196\n    }\n  }, \"lowerBound\"), \" and the right value being \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 281\n    }\n  }, \"upperBound\"), \". The Closed Range \", mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 358\n    }\n  }, \"includes\"), \" the upperBound value.\"), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 10\n    }\n  }), \"let\"), \" range \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 37\n    }\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 29\n    }\n  }), \"ClosedRange\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 39\n    }\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 29\n    }\n  }), \"0\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 24\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 24\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 24\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 24\n    }\n  }), \"5\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 3\n    }\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 28\n    }\n  }), \"(\"), \"range\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 33\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }), \"// 0...5\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 3\n    }\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 28\n    }\n  }), \"(\"), \"range\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 33\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 24\n    }\n  }), \"first\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 28\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 29\n    }\n  }), \"// Optional(0)\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 3\n    }\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 28\n    }\n  }), \"(\"), \"range\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 33\n    }\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 24\n    }\n  }), \"last\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 27\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 29\n    }\n  }), \"// Optional(10)\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 3\n    }\n  }), \"for\"), \" index \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 37\n    }\n  }), \"in\"), \" range \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 36\n    }\n  }), \"{\"), \"\\n  \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 5\n    }\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 28\n    }\n  }), \"(\"), \"index\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 33\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 29\n    }\n  }), \"// prints consecutivly, values from 0 to 5\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 3\n    }\n  }), \"}\"), \"\\n\")), mdx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 5\n    }\n  }, \"Inspecting a Range\"), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 10\n    }\n  }), \"var\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 31\n    }\n  }), \"isEmpty\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 30\n    }\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 29\n    }\n  }), \"Bool\"), \"\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 5\n    }\n  }, \"Returns a Boolean value indicating whether the range contains \", mdx(\"strong\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 74\n    }\n  }, \"no\"), \" elements.\"), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 10\n    }\n  }), \"var\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 31\n    }\n  }), \"count\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 28\n    }\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 29\n    }\n  }), \"Int\"), \"\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 5\n    }\n  }, \"Returns the number of elements in the collection of values.\"), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 10\n    }\n  }), \"let\"), \" lowerBound\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 41\n    }\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 29\n    }\n  }), \"Bound\"), \"\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 5\n    }\n  }, \"The range's lower bound\"), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 10\n    }\n  }), \"let\"), \" upperBound\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 41\n    }\n  }), \":\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 29\n    }\n  }), \"Bound\"), \"\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 5\n    }\n  }, \"The range's upper bound\"), mdx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 5\n    }\n  }));\n}\n_c2 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MDXLayout\");\n$RefreshReg$(_c2, \"MDXContent\");","map":{"version":3,"sources":["/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/swift-ranges/index.mdx"],"names":["React","mdx","Post","waynedahlberg","hero","meta","title","description","date","authors","discussion","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Post from \"@/components/Post\"\n\nimport { waynedahlberg } from \"@/authors\";\nimport hero from \"./hero-ranges.png\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Swift Ranges`,\n  description: `The basics of Swift Enumerations.`,\n  date: \"2020-11-24T12:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = (props) => <Post meta={meta} {...props} />\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <img src={hero} alt=\"Swift Ranges hero image\" />\n    <p>{`Ranges are generic Swift Structures for selecting a range, or a limited subset, of an existing type. Ranges are used commonly for identifying elements between the lowest and highest values in a set.`}</p>\n    <div class=\"rounded-md bg-blue-50 p-4\">\n  <div class=\"flex\">\n    <div class=\"flex-shrink-0\">\n      <svg class=\"h-5 w-5 text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n      </svg>\n    </div>\n    <div class=\"ml-3 flex-1 md:flex md:justify-between\">\n      <p class=\"text-sm leading-5 text-blue-700\">\n        This is a another post in a series intended as a personal growth\n        exercise. As I learn and digest new things, I want to write about them\n        to solidify my understanding.\n      </p>\n      <p class=\"mt-3 text-sm leading-5 md:mt-0 md:ml-6\">\n        <a href=\"https://fs.blog/2015/01/richard-feynman-knowing-something/\" class=\"whitespace-no-wrap font-medium text-blue-700 hover:text-blue-600 transition ease-in-out duration-150\">\n          Feynman &rarr;\n        </a>\n      </p>\n    </div>\n  </div>\n    </div>\n    <h2>{`Kinds of Ranges`}</h2>\n    <p>{`Swift gives us two ways of creating ranges. Half-Open range, and Closed Range.`}</p>\n    <h3>{`Half-Open Range`}</h3>\n    <p>{`The `}<em parentName=\"p\">{`Half-Open`}</em>{` range operator is declared with `}<inlineCode parentName=\"p\">{`..<`}</inlineCode>{` between a numeric pair.\nUsing a `}<inlineCode parentName=\"p\">{`Range`}</inlineCode>{` instance, you can quickly check to see if a value is contained in a particular range of values. This creates a range up to but `}<strong parentName=\"p\">{`not`}</strong>{` including the upper bound value.`}</p>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`let`}</span>{` underFive `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`0.0`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`<`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`5.0`}</span>{`\nunderFive`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`contains`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`3.14`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// true`}</span>{`\nunderFive`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`contains`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`6.28`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// false`}</span>{`\nunderFive`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`contains`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`5.0`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// false`}</span>{`\n`}</code></pre>\n    <p>{`Ranges help in `}<em parentName=\"p\">{`Switch`}</em>{` statements, using them for your cases. Consider the following:`}</p>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`let`}</span>{` score `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`92`}</span>{`\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`switch`}</span>{` score `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`case`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`0`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`<`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`50`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`:`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-green\"\n        }}>{`\"Fail\"`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`case`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`50`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`<`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`90`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`:`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-green\"\n        }}>{`\"Pass\"`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`default`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`:`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-green\"\n        }}>{`\"Excellent\"`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// prints \"Excellent\"`}</span>{`\n`}</code></pre>\n    <p>{`Range instances can represent an empty interval, unlike `}<em parentName=\"p\">{`Closed Range`}</em>{`(see below.)`}</p>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`let`}</span>{` empty `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`0.0`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`<`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`0.0`}</span>{`\nempty`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`contains`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`0.0`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// false`}</span>{`\nempty`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`isEmpty`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// true`}</span>{`\n`}</code></pre>\n    <p><em parentName=\"p\">{`Range`}</em>{` can also be used to specify a collection of consecutive, `}<em parentName=\"p\">{`strideable`}</em>{` values, usually Integers. The range can be used in `}<inlineCode parentName=\"p\">{`for-in`}</inlineCode>{` loops or with any sequence or collection method. The results of the range include all values up to, but `}<strong parentName=\"p\">{`not`}</strong>{` including the upperBound.`}</p>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`for`}</span>{` n `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`in`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`3`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`<`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`5`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span>{`n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// prints \"3\"`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// prints \"4\"`}</span>{`\n`}</code></pre>\n    <h3>{`Closed Range`}</h3>\n    <p>{`A `}<em parentName=\"p\">{`Closed`}</em>{` range operator is declared with `}<inlineCode parentName=\"p\">{`...`}</inlineCode>{` between a pair of numeric values. The left value being the `}<inlineCode parentName=\"p\">{`lowerBound`}</inlineCode>{` and the right value being `}<inlineCode parentName=\"p\">{`upperBound`}</inlineCode>{`. The Closed Range `}<strong parentName=\"p\">{`includes`}</strong>{` the upperBound value.`}</p>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`let`}</span>{` range `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`ClosedRange`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`0`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`5`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span>{`range`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// 0...5`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span>{`range`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`first`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// Optional(0)`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span>{`range`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span><span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`last`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// Optional(10)`}</span>{`\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`for`}</span>{` index `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`in`}</span>{` range `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n  `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span>{`index`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// prints consecutivly, values from 0 to 5`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n`}</code></pre>\n    <h3>{`Inspecting a Range`}</h3>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`var`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`isEmpty`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`Bool`}</span>{`\n`}</code></pre>\n    <p>{`Returns a Boolean value indicating whether the range contains `}<strong parentName=\"p\">{`no`}</strong>{` elements.`}</p>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`var`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`count`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`Int`}</span>{`\n`}</code></pre>\n    <p>{`Returns the number of elements in the collection of values.`}</p>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`let`}</span>{` lowerBound`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`Bound`}</span>{`\n`}</code></pre>\n    <p>{`The range's lower bound`}</p>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`let`}</span>{` upperBound`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`:`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`Bound`}</span>{`\n`}</code></pre>\n    <p>{`The range's upper bound`}</p>\n    <hr></hr>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}