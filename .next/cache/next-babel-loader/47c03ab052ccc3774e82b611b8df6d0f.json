{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/007-radar-eye/index.mdx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Post from \"@/components/Post\";\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./IMG_8470.jpg\";\nimport image2 from \"./radarEye.jpg\";\nimport image3 from \"./CSL_RadarEye_Rev1.png\";\nexport var __N_SSG = true;\nexport var meta = {\n  title: \"Radar Eye\",\n  description: \"The eye has it.\",\n  date: \"2016-03-15T14:24:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 10\n      }\n    }));\n  };\n};\n\nvar layoutProps = {\n  meta: meta\n};\n\nvar MDXLayout = function MDXLayout(props) {\n  return mdx(Post, _extends({\n    meta: meta\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }\n  }));\n};\n\n_c = MDXLayout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"I\\u2019ve been very interested in 3d printing lately. The R2 Radar Eye is on the top of my list as a 3d printed part candidate.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, \"I sent the file to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.instagram.com/hillmanjason/\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 31\n    }\n  }), \"Jason Hillman\"), \", a coworker\\u2019s brother who built his own delta 3d printer. He graciously accepted the challenge and set up a web cam that I could check on the progress of the 14 hour print. The curvature of the dome fits the print curvature exactly. Thank you, Jason! Next steps for the Radar Eye are bondo, lots of sanding, a base primer for metallics, and the secret sauce blue dome paint.\"), mdx(\"img\", {\n    src: image3,\n    alt: \"radar eye\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), mdx(\"img\", {\n    src: image2,\n    alt: \"radar eye\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), mdx(\"img\", {\n    src: image1,\n    alt: \"radar eye\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }));\n}\n_c2 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MDXLayout\");\n$RefreshReg$(_c2, \"MDXContent\");","map":{"version":3,"sources":["/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/007-radar-eye/index.mdx"],"names":["React","mdx","Post","waynedahlberg","image1","image2","image3","meta","title","description","date","authors","discussion","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA;;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,OAAO,IAAMC,IAAI,GAAG;AAClBC,EAAAA,KAAK,aADa;AAElBC,EAAAA,WAAW,mBAFO;AAGlBC,EAAAA,IAAI,EAAE,0BAHY;AAIlBC,EAAAA,OAAO,EAAE,CAACR,aAAD,CAJS;AAKlBS,EAAAA,UAAU,EAAE;AALM,CAAb;;AAOP,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,wBAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG;AAClBZ,EAAAA,IAAI,EAAJA;AADkB,CAApB;;AAGA,IAAMa,SAAS,GAAG,SAAZA,SAAY,CAACJ,KAAD;AAAA,SAAW,IAAC,IAAD;AAAM,IAAA,IAAI,EAAET;AAAZ,KAAsBS,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;AAAA,CAAlB;;KAAMI,S;AACN,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,eAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uIALK,EAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA0B;AAAG,IAAA,UAAU,EAAC;AAAd,KAAsB;AAC5C,YAAQ;AADoC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA1B,iYANK,EASL;AAAK,IAAA,GAAG,EAAEhB,MAAV;AAAkB,IAAA,GAAG,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATK,EAUL;AAAK,IAAA,GAAG,EAAED,MAAV;AAAkB,IAAA,GAAG,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVK,EAWL;AAAK,IAAA,GAAG,EAAED,MAAV;AAAkB,IAAA,GAAG,EAAC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXK,CAAP;AAcD;MAlBuBiB,U;AAoBxB;AACAA,UAAU,CAACE,cAAX,GAA4B,IAA5B","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Post from \"@/components/Post\"\n\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./IMG_8470.jpg\";\nimport image2 from \"./radarEye.jpg\";\nimport image3 from \"./CSL_RadarEye_Rev1.png\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Radar Eye`,\n  description: `The eye has it.`,\n  date: \"2016-03-15T14:24:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = (props) => <Post meta={meta} {...props} />\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <p>{`I’ve been very interested in 3d printing lately. The R2 Radar Eye is on the top of my list as a 3d printed part candidate.`}</p>\n    <p>{`I sent the file to `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.instagram.com/hillmanjason/\"\n      }}>{`Jason Hillman`}</a>{`, a coworker’s brother who built his own delta 3d printer. He graciously accepted the challenge and set up a web cam that I could check on the progress of the 14 hour print. The curvature of the dome fits the print curvature exactly. Thank you, Jason! Next steps for the Radar Eye are bondo, lots of sanding, a base primer for metallics, and the secret sauce blue dome paint.`}</p>\n    <img src={image3} alt=\"radar eye\" />\n    <img src={image2} alt=\"radar eye\" />\n    <img src={image1} alt=\"radar eye\" />\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}