{"ast":null,"code":"var _jsxFileName = \"/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/_document.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport NextDocument, { Html, Head, Main, NextScript } from 'next/document';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nclass InlineStylesHead extends Head {\n  getCssLinks() {\n    return this.__getInlineStyles();\n  }\n\n  __getInlineStyles() {\n    const {\n      assetPrefix,\n      files\n    } = this.context._documentProps;\n    if (!files || files.length === 0) return null;\n    return files.filter(file => /\\.css$/.test(file)).map(file => __jsx(\"style\", {\n      key: file,\n      nonce: this.props.nonce,\n      \"data-href\": `${assetPrefix}/_next/${file}`,\n      dangerouslySetInnerHTML: {\n        __html: fs.readFileSync(path.join(process.cwd(), '.next', file), 'utf-8')\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default class Document extends NextDocument {\n  static async getInitialProps(ctx) {\n    const initialProps = await NextDocument.getInitialProps(ctx);\n    return _objectSpread({}, initialProps);\n  }\n\n  render() {\n    return __jsx(Html, {\n      lang: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(InlineStylesHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, __jsx(\"link\", {\n      rel: \"preload\",\n      href: \"/fonts/Inter-roman.var-latin.woff2?3.13\",\n      as: \"font\",\n      type: \"font/woff2\",\n      crossOrigin: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    })), __jsx(\"body\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, __jsx(Main, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }), __jsx(NextScript, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/_document.js"],"names":["NextDocument","Html","Head","Main","NextScript","fs","path","InlineStylesHead","getCssLinks","__getInlineStyles","assetPrefix","files","context","_documentProps","length","filter","file","test","map","props","nonce","__html","readFileSync","join","process","cwd","Document","getInitialProps","ctx","initialProps","render"],"mappings":";;;;;;;;;;AAAA,OAAOA,YAAP,IAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,IAAnC,EAAyCC,UAAzC,QAA2D,eAA3D;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;;AAEA,MAAMC,gBAAN,SAA+BL,IAA/B,CAAoC;AAClCM,EAAAA,WAAW,GAAG;AACZ,WAAO,KAAKC,iBAAL,EAAP;AACD;;AAEDA,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyB,KAAKC,OAAL,CAAaC,cAA5C;AACA,QAAI,CAACF,KAAD,IAAUA,KAAK,CAACG,MAAN,KAAiB,CAA/B,EAAkC,OAAO,IAAP;AAElC,WAAOH,KAAK,CACTI,MADI,CACIC,IAAD,IAAU,SAASC,IAAT,CAAcD,IAAd,CADb,EAEJE,GAFI,CAECF,IAAD,IACH;AACE,MAAA,GAAG,EAAEA,IADP;AAEE,MAAA,KAAK,EAAE,KAAKG,KAAL,CAAWC,KAFpB;AAGE,mBAAY,GAAEV,WAAY,UAASM,IAAK,EAH1C;AAIE,MAAA,uBAAuB,EAAE;AACvBK,QAAAA,MAAM,EAAEhB,EAAE,CAACiB,YAAH,CAAgBhB,IAAI,CAACiB,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,OAAzB,EAAkCT,IAAlC,CAAhB,EAAyD,OAAzD;AADe,OAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHG,CAAP;AAYD;;AArBiC;;AAwBpC,eAAe,MAAMU,QAAN,SAAuB1B,YAAvB,CAAoC;AACjD,eAAa2B,eAAb,CAA6BC,GAA7B,EAAkC;AAChC,UAAMC,YAAY,GAAG,MAAM7B,YAAY,CAAC2B,eAAb,CAA6BC,GAA7B,CAA3B;AACA,6BAAYC,YAAZ;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,SADN;AAEE,MAAA,IAAI,EAAC,yCAFP;AAGE,MAAA,EAAE,EAAC,MAHL;AAIE,MAAA,IAAI,EAAC,YAJP;AAKE,MAAA,WAAW,EAAC,MALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,CADF;AAiBD;;AAxBgD","sourcesContent":["import NextDocument, { Html, Head, Main, NextScript } from 'next/document'\nimport * as fs from 'fs'\nimport * as path from 'path'\n\nclass InlineStylesHead extends Head {\n  getCssLinks() {\n    return this.__getInlineStyles()\n  }\n\n  __getInlineStyles() {\n    const { assetPrefix, files } = this.context._documentProps\n    if (!files || files.length === 0) return null\n\n    return files\n      .filter((file) => /\\.css$/.test(file))\n      .map((file) => (\n        <style\n          key={file}\n          nonce={this.props.nonce}\n          data-href={`${assetPrefix}/_next/${file}`}\n          dangerouslySetInnerHTML={{\n            __html: fs.readFileSync(path.join(process.cwd(), '.next', file), 'utf-8'),\n          }}\n        />\n      ))\n  }\n}\n\nexport default class Document extends NextDocument {\n  static async getInitialProps(ctx) {\n    const initialProps = await NextDocument.getInitialProps(ctx)\n    return { ...initialProps }\n  }\n\n  render() {\n    return (\n      <Html lang=\"en\">\n        <InlineStylesHead>\n          <link\n            rel=\"preload\"\n            href=\"/fonts/Inter-roman.var-latin.woff2?3.13\"\n            as=\"font\"\n            type=\"font/woff2\"\n            crossOrigin=\"true\"\n          />\n        </InlineStylesHead>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}