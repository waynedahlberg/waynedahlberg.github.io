{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Post from \"@/components/Post\";\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./figma-variants.jpg\";\nimport image2 from \"./variants.jpg\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Figma Variants`,\n  description: `Designing extensible components in Figma is fun!`,\n  date: \"2020-11-05T12:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst layoutProps = {\n  meta\n};\n\nconst MDXLayout = props => mdx(Post, _extends({\n  meta: meta\n}, props));\n\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `The team at Chatbooks has been fully invested in Figma for several years now. We found it replaced a host of 3rd party solutions that never quite played well together.`), mdx(\"p\", null, `One of the great things about Figma is their ability to push the envelope, listen to our feedback, and implement reasoned, smart and functional solutions. Their latest feature, `, mdx(\"em\", {\n    parentName: \"p\"\n  }, `variants`), `, comes at a great time as we're finalizing our company's design system â€” Breakfast.`), mdx(\"img\", {\n    src: image2,\n    alt: \"Status Bar variations\"\n  }), mdx(\"p\", null, `Variants allow us to package visual `, mdx(\"em\", {\n    parentName: \"p\"\n  }, `state`), ` within singular or even nested components. These states can be described by a simple key-value relationship for each property. For example, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `type:`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `size:`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `color:`), ` could all be properties of the state of a button.`), mdx(\"p\", null, `Once a valid group of similar and consistent component states are selected, you simple click `, mdx(\"strong\", {\n    parentName: \"p\"\n  }, `Create Variant`), `. Once created, you can add and edit the properties that define your variant states.`), mdx(\"p\", null, `To test my knowledge of variants, I decided to make my first published component in the Figma Community; an iOS 14 Status Bar. The status bar contains much more variable information than expected. My component is limited to appearance (light and dark mode), battery charging, battery level, wifi signal, network signal, notch and isCameraRecording.`), mdx(\"p\", null, `You can check out the file in the Figma Community by clicking the image below.`), mdx(\"a\", {\n    href: \"https://www.figma.com/community/file/904065746347450024/iOS-14-Status-Bar\"\n  }, mdx(\"img\", {\n    src: image1,\n    alt: \"iOS 14 Status Bar Figma Component\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}