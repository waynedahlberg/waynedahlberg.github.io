{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Post from \"@/components/Post\";\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./IMG_8552.jpg\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Mothers Polish`,\n  description: `Shine on you crazy diamond`,\n  date: \"2016-02-26T14:24:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst layoutProps = {\n  meta\n};\n\nconst MDXLayout = props => mdx(Post, _extends({\n  meta: meta\n}, props));\n\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `I read yesterday a post by a metallurgist in the Astromech forum. He said the best way to polish billet is to avoid sanding and removing material, just use some Mothers Billet Metal Polish. You put a small amount on a terry cloth and just rub on the dome until a black residue appears.`), mdx(\"p\", null, `Wait about a minute and then wipe the residue clean with a fresh terry cloth. I was skeptical, and the billet polish is not cheap, but Iâ€™m a believer now. Below is a photo of the dome after polishing the left side for less than 2 minutes. I used about a quarter size dab of polish.`), mdx(\"p\", null, `This weekend I finished both the inner and outer dome surfacing. Using 400, 600, 1000, 1500, then 2000 grit wet sand papers, followed by two rounds of Mothers Billet Polish. Also I marked all the panels according to the specs from `, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://astromech.net\"\n  }), `Astromech.net`), `.`), mdx(\"img\", {\n    src: image1,\n    alt: \"polished domes\"\n  }));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}