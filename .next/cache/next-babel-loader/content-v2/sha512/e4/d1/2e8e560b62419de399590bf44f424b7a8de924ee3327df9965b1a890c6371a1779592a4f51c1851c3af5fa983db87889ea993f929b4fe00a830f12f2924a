{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport NextDocument, { Html, Head, Main, NextScript } from 'next/document';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nclass InlineStylesHead extends Head {\n  getCssLinks() {\n    return this.__getInlineStyles();\n  }\n\n  __getInlineStyles() {\n    const {\n      assetPrefix,\n      files\n    } = this.context._documentProps;\n    if (!files || files.length === 0) return null;\n    return files.filter(file => /\\.css$/.test(file)).map(file => __jsx(\"style\", {\n      key: file,\n      nonce: this.props.nonce,\n      \"data-href\": `${assetPrefix}/_next/${file}`,\n      dangerouslySetInnerHTML: {\n        __html: fs.readFileSync(path.join(process.cwd(), '.next', file), 'utf-8')\n      }\n    }));\n  }\n\n}\n\nexport default class Document extends NextDocument {\n  static async getInitialProps(ctx) {\n    const initialProps = await NextDocument.getInitialProps(ctx);\n    return _objectSpread({}, initialProps);\n  }\n\n  render() {\n    return __jsx(Html, {\n      lang: \"en\"\n    }, __jsx(InlineStylesHead, null, __jsx(\"link\", {\n      rel: \"preload\",\n      href: \"/fonts/Inter-roman.var-latin.woff2?3.13\",\n      as: \"font\",\n      type: \"font/woff2\",\n      crossOrigin: \"true\"\n    })), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}