{"ast":null,"code":"import _extends from \"/Users/waynedahlberg/Blog/waynedahlberg.github.io/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/waynedahlberg/Blog/waynedahlberg.github.io/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport { waynedahlberg } from '@/authors';\nimport hero from './hero-optionals.png';\nexport var meta = {\n  title: \"Swift Optionals?\",\n  description: \"Dealing with the absence of value\",\n  date: '2021-03-31T15:45:00.000Z',\n  authors: [waynedahlberg],\n  discussion: 'https://github.com/tailwindlabs/tailwindcss/discussions/2511'\n};\nvar layoutProps = {\n  meta: meta\n};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"img\", {\n    src: hero,\n    alt: \"Swift Optionals Hero Image\"\n  }), mdx(\"p\", null, \"The Swift language is built on Type safety. One important Swift Type introduced with Swift 4 is the Optional Type. Optional types can represent a value or the non-existence of value. Basically an optional can say both, \\\"There is a value, and it equals 4\\\" as well as \\\"There is no value here.\\\"\"));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}