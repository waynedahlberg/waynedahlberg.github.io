{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/110920-swift-access-control/index.mdx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Post from \"@/components/Post\";\nimport { waynedahlberg } from \"@/authors\";\nexport var __N_SSG = true;\nexport var meta = {\n  title: \"Swift Access Control\",\n  description: \"The basics of Swift Access Control.\",\n  date: \"2020-11-09T16:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 10\n      }\n    }));\n  };\n};\n\nvar layoutProps = {\n  meta: meta\n};\n\nvar MDXLayout = function MDXLayout(props) {\n  return mdx(Post, _extends({\n    meta: meta\n  }, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 30\n    }\n  }));\n};\n\n_c = MDXLayout;\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, \"When writing stuctures, class and functions you need to let other code or even other developers know what is available and what is not. This is done by access control prefixing with \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 194\n    }\n  }, \"public\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 250\n    }\n  }, \"open\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 304\n    }\n  }, \"internal\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 362\n    }\n  }, \"private\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 423\n    }\n  }, \"fileprivate\"), \". Access control is another foundational concept that eluded me for years while learning the Swift language.\"), mdx(\"div\", {\n    \"class\": \"rounded-md bg-blue-50 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, mdx(\"div\", {\n    \"class\": \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, mdx(\"div\", {\n    \"class\": \"flex-shrink-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, mdx(\"svg\", {\n    className: \"h-5 w-5 text-blue-400\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, mdx(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\",\n    clipRule: \"evenodd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }))), mdx(\"div\", {\n    \"class\": \"ml-3 flex-1 md:flex md:justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, mdx(\"p\", {\n    \"class\": \"text-sm leading-5 text-blue-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"This is a another post in a series intended as a personal growth exercise. As I learn and digest new things, I want to write about them to solidify my understanding.\"), mdx(\"p\", {\n    \"class\": \"mt-3 text-sm leading-5 md:mt-0 md:ml-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, mdx(\"a\", {\n    href: \"https://fs.blog/2015/01/richard-feynman-knowing-something/\",\n    \"class\": \"whitespace-no-wrap font-medium text-blue-700 hover:text-blue-600 transition ease-in-out duration-150\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Feynman \\u2192\"))))), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, \"These features can restrict team members from accessing, extending or overriding the original implementation of some code. It's very useful when creating a framework or library that is intended to be shared openly among a developer community.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"Let's look at \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }\n  }, \"module\"), \"; an individual unit of code distribution, e.g. your app.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 8\n    }\n  }, \"open\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 65\n    }\n  }, \"public\"), \" are used to declare code accessibility across different modules.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 8\n    }\n  }, \"internal\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 66\n    }\n  }, \"fileprivate\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 130\n    }\n  }, \"private\"), \" are used at the Swift file level.\"), mdx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"private\")), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }), \"// Foo.swift\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }\n  }), \"struct\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 34\n    }\n  }), \"FooStruct\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 37\n    }\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 35\n    }\n  }), \"let\"), \" privateStr \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 42\n    }\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }), \"\\\"privateStr\\\"\"), \"\\n\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), \"func\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 32\n    }\n  }), \"fooPrintFunc\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 35\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 24\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 29\n    }\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 28\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 24\n    }\n  }), \"\\\"\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 14\n    }\n  }), \"\\\\(\"), \"privateStr\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 44\n    }\n  }), \")\")), \"\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 47\n    }\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }\n  }), \"struct\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 34\n    }\n  }), \"FooStructOne\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 40\n    }\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), \"var\"), \" fooStruct \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 41\n    }\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  }), \"FooStruct\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 32\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 24\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }), \"didSet\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 34\n    }\n  }), \"{\"), \"\\n            fooStruct\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 24\n    }\n  }), \".\"), \"privateStr\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), \"}\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 3\n    }\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-gray-400 italic\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 3\n    }\n  }), \"// Bar.swift\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 3\n    }\n  }), \"extension\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }\n  }), \"FooStruct\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 37\n    }\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), \"func\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 32\n    }\n  }), \"fooFunc\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 30\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 24\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 29\n    }\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 28\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 24\n    }\n  }), \"\\\"\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 17\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 14\n    }\n  }), \"\\\\(\"), \"privateStr\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 44\n    }\n  }), \")\")), \"\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 47\n    }\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 3\n    }\n  }), \"}\"), \"\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }\n  }, \"Given the example above, \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 37\n    }\n  }, \"FooStructOne\"), \" tries to access the setter of \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 128\n    }\n  }, \"FooStruct\"), \" private property, but cannot because of \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 226\n    }\n  }, \"private\"), \" access control. Similarly, the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 313\n    }\n  }, \"FooStruct\"), \" extension in \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 384\n    }\n  }, \"Bar.swift\"), \" cannot extend and print \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 466\n    }\n  }, \"privateStr\"), \" in \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 528\n    }\n  }, \"Foo.swift\"), \" because \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 594\n    }\n  }, \"FooStruct\"), \" is not contained in the same Swift file.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 8\n    }\n  }, \"private\"), \" means declared code such as \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 92\n    }\n  }, \"class\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 147\n    }\n  }, \"struct\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 203\n    }\n  }, \"enum\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 257\n    }\n  }, \"property\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 318\n    }\n  }, \"method\"), \" can only be accessed withing the current scope and enclosed type. Only extensions within the same Swift file can access \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 493\n    }\n  }, \"private\"), \" declared code.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, \"The scope of \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 25\n    }\n  }, \"extension\"), \" can only access those private properties when they are declared in the same file of the extended, declared code (\", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 196\n    }\n  }, \"class\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 251\n    }\n  }, \"struct\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 307\n    }\n  }, \"enum\"), \", property, or method, etc.).\"), mdx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, \"fileprivate\")), mdx(\"pre\", _extends({\n    \"className\": \"language-swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Swift\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 8\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 10\n    }\n  }), \"struct\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 34\n    }\n  }), \"FooStruct\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 37\n    }\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }), \"private\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 35\n    }\n  }), \"let\"), \" privateStr \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 42\n    }\n  }), \"=\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 29\n    }\n  }), \"\\\"privateStr\\\"\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 3\n    }\n  }), \"}\"), \"\\n\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 3\n    }\n  }), \"extension\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 37\n    }\n  }), \"FooStruct\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 37\n    }\n  }), \"{\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-purple\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }), \"func\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 32\n    }\n  }), \"fooFunc\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 30\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 24\n    }\n  }), \")\"), \" \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }\n  }), \"{\"), \"\\n        \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-blue\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }), \"print\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 28\n    }\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-green\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 24\n    }\n  }), \"\\\"\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  }), mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 14\n    }\n  }), \"\\\\(\"), \"privateStr\", mdx(\"span\", _extends({\n    parentName: \"span\"\n  }, {\n    \"className\": \"\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 44\n    }\n  }), \")\")), \"\\\"\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 47\n    }\n  }), \")\"), \"\\n    \", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }), \"}\"), \"\\n\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"text-code-white\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 3\n    }\n  }), \"}\"), \"\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 5\n    }\n  }, \"Each Swift file can contain classes, structs, enums, etc. \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 70\n    }\n  }, \"fileprivate\"), \" means the code can only be accessible within the same Swift file.\"), mdx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, \"internal\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }, \"is the default access control in the Swift language. Marking declared code as \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 90\n    }\n  }, \"internal\"), \" means it can be accessed within the same module (app) freely. Developers can even subclass, extend, and override classes, structs, properties and methods.\"), mdx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, \"public\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }\n  }, \"Marking declared code as \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 37\n    }\n  }, \"public\"), \" means that it can be accessed across different modules and files, but it \", mdx(\"em\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 165\n    }\n  }, \"cannot\"), \" be subclassed. A good example is the \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 241\n    }\n  }, \"init\"), \" function of a class in order to prevent abnormal initialization made by other developers.\"), mdx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, \"open\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 5\n    }\n  }, \"The most unrestricted access control level. All \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 60\n    }\n  }, \"open\"), \" declared code can be accessed and subclassed with no restriction \", mdx(\"em\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 178\n    }\n  }, \"among modules\"), \". The \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 229\n    }\n  }, \"open\"), \" function and properties within the class can even be overriden.\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }\n  }, \"For example, \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, \"UICollectionView\"), \" is an \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 96\n    }\n  }, \"open\"), \" class in that developers can create a custom \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 194\n    }\n  }, \"UICollectionView\"), \".\"), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 5\n    }\n  }, \"Summary\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 5\n    }\n  }, \"Access Control provides a great tool for developers to restrict access rights of declared code. It is useful when you are developing and SDK or API for other developers to implement. They include:\"), mdx(\"ol\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 27\n    }\n  }, \"private\"), \" - Most restricted. Properties can only be accessed within the current enclosing type.\"), mdx(\"li\", {\n    parentName: \"ol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 27\n    }\n  }, \"fileprivate\"), \" - Can only be accessed within the same file\"), mdx(\"li\", {\n    parentName: \"ol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 27\n    }\n  }, \"internal\"), \" - This is the default access control and can be accessed within the same module freely.\"), mdx(\"li\", {\n    parentName: \"ol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 27\n    }\n  }, \"public\"), \" - Class can be accessed across different modules (app module and 3rd party library) but cannot be subclassed and its content cannot be overridden.\"), mdx(\"li\", {\n    parentName: \"ol\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 27\n    }\n  }, \"open\"), \" - The most unrestricted access control and other developers can subclass it and override those open properties.\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 5\n    }\n  }, \"In order to develop a safe and stable app, it is recommended to consider private first, and then think twice before loosening up the access control.\"), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 5\n    }\n  }, \"Reference\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://docs.swift.org/swift-book/LanguageGuide/AccessControl.html\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 8\n    }\n  }), \"Apple Documentation - Access Control in the Swift Language\")));\n}\n_c2 = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MDXLayout\");\n$RefreshReg$(_c2, \"MDXContent\");","map":{"version":3,"sources":["/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/110920-swift-access-control/index.mdx"],"names":["React","mdx","Post","waynedahlberg","meta","title","description","date","authors","discussion","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Post from \"@/components/Post\"\n\nimport { waynedahlberg } from \"@/authors\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Swift Access Control`,\n  description: `The basics of Swift Access Control.`,\n  date: \"2020-11-09T16:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = (props) => <Post meta={meta} {...props} />\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <p>{`When writing stuctures, class and functions you need to let other code or even other developers know what is available and what is not. This is done by access control prefixing with `}<inlineCode parentName=\"p\">{`public`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`open`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`internal`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`private`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`fileprivate`}</inlineCode>{`. Access control is another foundational concept that eluded me for years while learning the Swift language.`}</p>\n    <div class=\"rounded-md bg-blue-50 p-4\">\n  <div class=\"flex\">\n    <div class=\"flex-shrink-0\">\n      <svg className=\"h-5 w-5 text-blue-400\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n        <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n      </svg>\n    </div>\n    <div class=\"ml-3 flex-1 md:flex md:justify-between\">\n      <p class=\"text-sm leading-5 text-blue-700\">\n        This is a another post in a series intended as a personal growth\n        exercise. As I learn and digest new things, I want to write about them\n        to solidify my understanding.\n      </p>\n      <p class=\"mt-3 text-sm leading-5 md:mt-0 md:ml-6\">\n        <a href=\"https://fs.blog/2015/01/richard-feynman-knowing-something/\" class=\"whitespace-no-wrap font-medium text-blue-700 hover:text-blue-600 transition ease-in-out duration-150\">\n          Feynman &rarr;\n        </a>\n      </p>\n    </div>\n  </div>\n    </div>\n    <p>{`These features can restrict team members from accessing, extending or overriding the original implementation of some code. It's very useful when creating a framework or library that is intended to be shared openly among a developer community.`}</p>\n    <p>{`Let's look at `}<inlineCode parentName=\"p\">{`module`}</inlineCode>{`; an individual unit of code distribution, e.g. your app.`}</p>\n    <p><inlineCode parentName=\"p\">{`open`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`public`}</inlineCode>{` are used to declare code accessibility across different modules.`}</p>\n    <p><inlineCode parentName=\"p\">{`internal`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`fileprivate`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`private`}</inlineCode>{` are used at the Swift file level.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`private`}</inlineCode></h3>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// Foo.swift`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`struct`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`FooStruct`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`private`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`let`}</span>{` privateStr `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-green\"\n        }}>{`\"privateStr\"`}</span>{`\n\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`func`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`fooPrintFunc`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-green\"\n        }}>{`\"`}<span parentName=\"span\" {...{\n            \"className\": \"\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"\"\n            }}>{`\\\\(`}</span>{`privateStr`}<span parentName=\"span\" {...{\n              \"className\": \"\"\n            }}>{`)`}</span></span>{`\"`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`struct`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`FooStructOne`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`var`}</span>{` fooStruct `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`FooStruct`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`didSet`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n            fooStruct`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`.`}</span>{`privateStr\n        `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-gray-400 italic\"\n        }}>{`// Bar.swift`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`extension`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`FooStruct`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`func`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`fooFunc`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-green\"\n        }}>{`\"`}<span parentName=\"span\" {...{\n            \"className\": \"\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"\"\n            }}>{`\\\\(`}</span>{`privateStr`}<span parentName=\"span\" {...{\n              \"className\": \"\"\n            }}>{`)`}</span></span>{`\"`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n`}</code></pre>\n    <p>{`Given the example above, `}<inlineCode parentName=\"p\">{`FooStructOne`}</inlineCode>{` tries to access the setter of `}<inlineCode parentName=\"p\">{`FooStruct`}</inlineCode>{` private property, but cannot because of `}<inlineCode parentName=\"p\">{`private`}</inlineCode>{` access control. Similarly, the `}<inlineCode parentName=\"p\">{`FooStruct`}</inlineCode>{` extension in `}<inlineCode parentName=\"p\">{`Bar.swift`}</inlineCode>{` cannot extend and print `}<inlineCode parentName=\"p\">{`privateStr`}</inlineCode>{` in `}<inlineCode parentName=\"p\">{`Foo.swift`}</inlineCode>{` because `}<inlineCode parentName=\"p\">{`FooStruct`}</inlineCode>{` is not contained in the same Swift file.`}</p>\n    <p><inlineCode parentName=\"p\">{`private`}</inlineCode>{` means declared code such as `}<inlineCode parentName=\"p\">{`class`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`struct`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`enum`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`property`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`method`}</inlineCode>{` can only be accessed withing the current scope and enclosed type. Only extensions within the same Swift file can access `}<inlineCode parentName=\"p\">{`private`}</inlineCode>{` declared code.`}</p>\n    <p>{`The scope of `}<inlineCode parentName=\"p\">{`extension`}</inlineCode>{` can only access those private properties when they are declared in the same file of the extended, declared code (`}<inlineCode parentName=\"p\">{`class`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`struct`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`enum`}</inlineCode>{`, property, or method, etc.).`}</p>\n    <h3><inlineCode parentName=\"h3\">{`fileprivate`}</inlineCode></h3>\n    <pre {...{\n      \"className\": \"language-swift\"\n    }}><code parentName=\"pre\" {...{\n        \"className\": \"language-Swift\"\n      }}><span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`struct`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`FooStruct`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`private`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`let`}</span>{` privateStr `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`=`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-green\"\n        }}>{`\"privateStr\"`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`extension`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"\"\n        }}>{`FooStruct`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-purple\"\n        }}>{`func`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`fooFunc`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{` `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`{`}</span>{`\n        `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-blue\"\n        }}>{`print`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`(`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-green\"\n        }}>{`\"`}<span parentName=\"span\" {...{\n            \"className\": \"\"\n          }}><span parentName=\"span\" {...{\n              \"className\": \"\"\n            }}>{`\\\\(`}</span>{`privateStr`}<span parentName=\"span\" {...{\n              \"className\": \"\"\n            }}>{`)`}</span></span>{`\"`}</span><span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`)`}</span>{`\n    `}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n`}<span parentName=\"code\" {...{\n          \"className\": \"text-code-white\"\n        }}>{`}`}</span>{`\n`}</code></pre>\n    <p>{`Each Swift file can contain classes, structs, enums, etc. `}<inlineCode parentName=\"p\">{`fileprivate`}</inlineCode>{` means the code can only be accessible within the same Swift file.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`internal`}</inlineCode></h3>\n    <p>{`is the default access control in the Swift language. Marking declared code as `}<inlineCode parentName=\"p\">{`internal`}</inlineCode>{` means it can be accessed within the same module (app) freely. Developers can even subclass, extend, and override classes, structs, properties and methods.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`public`}</inlineCode></h3>\n    <p>{`Marking declared code as `}<inlineCode parentName=\"p\">{`public`}</inlineCode>{` means that it can be accessed across different modules and files, but it `}<em parentName=\"p\">{`cannot`}</em>{` be subclassed. A good example is the `}<inlineCode parentName=\"p\">{`init`}</inlineCode>{` function of a class in order to prevent abnormal initialization made by other developers.`}</p>\n    <h3><inlineCode parentName=\"h3\">{`open`}</inlineCode></h3>\n    <p>{`The most unrestricted access control level. All `}<inlineCode parentName=\"p\">{`open`}</inlineCode>{` declared code can be accessed and subclassed with no restriction `}<em parentName=\"p\">{`among modules`}</em>{`. The `}<inlineCode parentName=\"p\">{`open`}</inlineCode>{` function and properties within the class can even be overriden.`}</p>\n    <p>{`For example, `}<inlineCode parentName=\"p\">{`UICollectionView`}</inlineCode>{` is an `}<inlineCode parentName=\"p\">{`open`}</inlineCode>{` class in that developers can create a custom `}<inlineCode parentName=\"p\">{`UICollectionView`}</inlineCode>{`.`}</p>\n    <h2>{`Summary`}</h2>\n    <p>{`Access Control provides a great tool for developers to restrict access rights of declared code. It is useful when you are developing and SDK or API for other developers to implement. They include:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`private`}</inlineCode>{` - Most restricted. Properties can only be accessed within the current enclosing type.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`fileprivate`}</inlineCode>{` - Can only be accessed within the same file`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`internal`}</inlineCode>{` - This is the default access control and can be accessed within the same module freely.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`public`}</inlineCode>{` - Class can be accessed across different modules (app module and 3rd party library) but cannot be subclassed and its content cannot be overridden.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`open`}</inlineCode>{` - The most unrestricted access control and other developers can subclass it and override those open properties.`}</li>\n    </ol>\n    <p>{`In order to develop a safe and stable app, it is recommended to consider private first, and then think twice before loosening up the access control.`}</p>\n    <h2>{`Reference`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://docs.swift.org/swift-book/LanguageGuide/AccessControl.html\"\n      }}>{`Apple Documentation - Access Control in the Swift Language`}</a></p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}