{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/110820-figma-variants/index.mdx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./ia-writer-working-copy.jpg\";\nimport image2 from \"./nextjs-tailwind-vercel.jpg\";\nexport var meta = {\n  title: \"Figma Variants\",\n  description: \"Designing extensible components in Figma is fun!\",\n  date: \"2020-11-08T12:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 10\n      }\n    }));\n  };\n};\n\nvar layoutProps = {\n  meta: meta\n};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"Here is an attempt at building the native iOS Status Bar with variant components. You can also check it out and duplicate it from the Figma Community \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.figma.com/community/file/904065746347450024/iOS-14-Status-Bar\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 162\n    }\n  }), \"here\"), \".\"), mdx(\"iframe\", {\n    style: \"border: 1px solid #000;\",\n    width: \"800\",\n    height: \"450\",\n    src: \"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FQQHcyX67RRbKHnshLOJRsL%2FiOS-14-Status-Bar-Community%3Fnode-id%3D1%253A21\",\n    allowfullscreen: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }));\n}\n_c = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c;\n\n$RefreshReg$(_c, \"MDXContent\");","map":{"version":3,"sources":["/Users/waynedahlberg/Blog/waynedahlberg.github.io/src/pages/110820-figma-variants/index.mdx"],"names":["React","mdx","waynedahlberg","image1","image2","meta","title","description","date","authors","discussion","makeShortcode","name","MDXDefaultShortcode","props","console","warn","layoutProps","MDXLayout","MDXContent","components","isMDXComponent"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,eAApB;AAEA;;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAO,IAAMC,IAAI,GAAG;AAClBC,EAAAA,KAAK,kBADa;AAElBC,EAAAA,WAAW,oDAFO;AAGlBC,EAAAA,IAAI,EAAE,0BAHY;AAIlBC,EAAAA,OAAO,EAAE,CAACP,aAAD,CAJS;AAKlBQ,EAAAA,UAAU,EAAE;AALM,CAAb;;AAOP,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI;AAAA,SAAI,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAChEC,IAAAA,OAAO,CAACC,IAAR,CAAa,eAAeJ,IAAf,GAAsB,yEAAnC;AACA,WAAO,wBAASE,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAHyB;AAAA,CAA1B;;AAKA,IAAMG,WAAW,GAAG;AAClBZ,EAAAA,IAAI,EAAJA;AADkB,CAApB;AAGA,IAAMa,SAAS,GAAG,SAAlB;AACA,eAAe,SAASC,UAAT,OAGZ;AAAA,MAFDC,UAEC,QAFDA,UAEC;AAAA,MADEN,KACF;;AACD,SAAO,IAAC,SAAD,eAAeG,WAAf,EAAgCH,KAAhC;AAAuC,IAAA,UAAU,EAAEM,UAAnD;AAA+D,IAAA,OAAO,EAAC,WAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+JAA6J;AAAG,IAAA,UAAU,EAAC;AAAd,KAAsB;AAC/K,YAAQ;AADuK,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA7J,MAHK,EAML;AAAQ,IAAA,KAAK,EAAC,yBAAd;AAAwC,IAAA,KAAK,EAAC,KAA9C;AAAoD,IAAA,MAAM,EAAC,KAA3D;AAAiE,IAAA,GAAG,EAAC,iKAArE;AAAuO,IAAA,eAAe,MAAtP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANK,CAAP;AAQD;KAZuBD,U;AAcxB;AACAA,UAAU,CAACE,cAAX,GAA4B,IAA5B","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./ia-writer-working-copy.jpg\";\nimport image2 from \"./nextjs-tailwind-vercel.jpg\";\nexport const meta = {\n  title: `Figma Variants`,\n  description: `Designing extensible components in Figma is fun!`,\n  date: \"2020-11-08T12:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Here is an attempt at building the native iOS Status Bar with variant components. You can also check it out and duplicate it from the Figma Community `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.figma.com/community/file/904065746347450024/iOS-14-Status-Bar\"\n      }}>{`here`}</a>{`.`}</p>\n    <iframe style=\"border: 1px solid #000;\" width=\"800\" height=\"450\" src=\"https://www.figma.com/embed?embed_host=share&url=https%3A%2F%2Fwww.figma.com%2Ffile%2FQQHcyX67RRbKHnshLOJRsL%2FiOS-14-Status-Bar-Community%3Fnode-id%3D1%253A21\" allowfullscreen></iframe>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}