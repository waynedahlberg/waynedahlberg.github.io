{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { waynedahlberg } from \"@/authors\";\nimport hero from \"./hero-access-control.png\";\nexport const meta = {\n  title: `Swift Access Control`,\n  description: `The basics of Swift Access Control.`,\n  date: \"2020-11-09T16:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst layoutProps = {\n  meta\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"img\", {\n    src: hero,\n    alt: \"Swift Access Control her image\"\n  }), mdx(\"p\", null, `When writing stuctures, class and functions you need to let other code or even other developers know what is available and what is not. This is done by access control prefixing with `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `public`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `open`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `internal`), `, `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `private`), `, and `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `fileprivate`), `. Access control is another foundational concept that eluded me for years while learning the Swift language.`));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}