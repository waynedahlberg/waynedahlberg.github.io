{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport { waynedahlberg } from \"@/authors\";\nimport image01 from \"./combine-marble-merge.jpg\";\nimport image02 from \"./combine-marble-map.jpg\";\nimport image03 from \"./combine-marble-first.jpg\";\nimport image04 from \"./combine-marble-last.jpg\";\nimport image05 from \"./combine-marble-count.jpg\";\nimport image06 from \"./combine-marble-debounce.jpg\";\nimport image07 from \"./combine-marble-zip.jpg\";\nexport var meta = {\n  title: \"What is Combine?\",\n  description: \"An Introduction to Combine.\",\n  date: \"2020-11-10T14:00:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  meta: meta\n};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"span\", {\n    className: \"text-gray-200 text-3xl font-extrabold\"\n  }, \"***DRAFT***\"), mdx(\"p\", null, \"Combine is the new reactive programming framework from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.apple.com/documentation/combine\"\n  }), \"Apple\"), \". Like SwiftUI (which it pairs beautifully with), Combine is declarative. It provides tools for managing streams of your app's events over time, and \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"react\"), \" accordingly. Because it has the blessing of Apple, you know it's here to stay.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The Combine framework provides a declarative Swift API for processing values over time.\"), mdx(\"cite\", null, \"Apple Documentation\")));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}