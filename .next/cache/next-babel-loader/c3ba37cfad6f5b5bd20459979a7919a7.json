{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport Post from \"@/components/Post\";\nimport { waynedahlberg } from \"@/authors\";\nimport image1 from \"./IMG_696626613127380-edit.jpg\";\nexport { getStaticProps } from \"@/getStaticProps\";\nexport const meta = {\n  title: `Mid-year R2D2 update`,\n  description: `It's been a while`,\n  date: \"2020-06-06T14:24:00.000Z\",\n  authors: [waynedahlberg],\n  discussion: \"https://github.com/tailwindlabs/tailwindcss/discussions/2511\"\n};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return mdx(\"div\", props);\n};\n\nconst layoutProps = {\n  meta\n};\n\nconst MDXLayout = props => mdx(Post, _extends({\n  meta: meta\n}, props));\n\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, `2020 has been a year, and we're barely in June. I'm really looking forward to WWDC on the 22nd. I've spent a lot of quarantine time studying SwiftUI and Combine, and creating an every growing list of iOS app and game ideas.`), mdx(\"img\", {\n    src: image1,\n    alt: \"r2d2 update\"\n  }), mdx(\"p\", null, `Progress on the droid as slowed to a trickle, but certain events have provided more time on that. I've sold my previous chain drive motors and opted for a brushless hub electric motor setup. After purchasing a couple e-bikes for the family, I am really impressed with the silence and torque curve of these motors. The motor controllers are outrageously expensive, but provide precise signal mixing and the ability to move the droid at a near dead slow creep. This is really important to me because it will be around children frequently and I want it as safe as possible (it's coming in at a whopping 120lb of aluminum already).`), mdx(\"p\", null, `I'm finishing a small iOS app currently. Once that is submitted to Testflight with a few folks, I'll get some feedback and then push to the App Store. The next project in the queue is a simple grid-like puzzle game with a very fun theme. Can't wait.`));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}