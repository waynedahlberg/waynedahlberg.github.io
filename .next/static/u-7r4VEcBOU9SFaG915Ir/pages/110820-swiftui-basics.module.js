(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{"7SZq":function(e,t,a){"use strict";a.r(t),a.d(t,"__N_SSG",(function(){return w})),a.d(t,"meta",(function(){return h})),a.d(t,"default",(function(){return f}));var c=a("Ff2n"),s=a("wx14"),n=a("q1tI"),b=a.n(n),o=a("7ljp"),p=a("CZVI"),i=a("iBhN"),d=a("h2Ty"),m=a("fFf7"),r=a("jybU"),l=a("uCkV"),j=a("ggzO"),O=a("zqH2"),N=a("njY4"),w=(b.a.createElement,!0),h={title:"SwiftUI Basics",description:"The basics of the SwiftUI layout framework.",date:"2020-11-08T12:00:00.000Z",authors:[i.a],discussion:"https://github.com/tailwindlabs/tailwindcss/discussions/2511"},x={meta:h},u=e=>Object(o.b)(p.a,Object(s.a)({meta:h},e));function f(e){var{components:t}=e,a=Object(c.a)(e,["components"]);return Object(o.b)(u,Object(s.a)({},x,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",Object(s.a)({parentName:"p"},{href:"https://developer.apple.com/tutorials/swiftui?ref=madewithvuejs.com"}),"Apple")," describes SwiftUI is a modern way to declare user interfaces for any Apple platform. Unlike imperative UI layout tools like Interface Builder and Auto Layout, the declarative nature of SwiftUI Views allows developers to concentrate on composition and state."),Object(o.b)("div",{class:"rounded-md bg-blue-50 p-4"},Object(o.b)("div",{class:"flex"},Object(o.b)("div",{class:"flex-shrink-0"},Object(o.b)("svg",{class:"h-5 w-5 text-blue-400",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor"},Object(o.b)("path",{fillRule:"evenodd",d:"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z",clipRule:"evenodd"}))),Object(o.b)("div",{class:"ml-3 flex-1 md:flex md:justify-between"},Object(o.b)("p",{class:"text-sm leading-5 text-blue-700"},"This is a another post in a series intended as a personal growth exercise. As I learn and digest new things, I want to write about them to solidify my understanding."),Object(o.b)("p",{class:"mt-3 text-sm leading-5 md:mt-0 md:ml-6"},Object(o.b)("a",{href:"https://fs.blog/2015/01/richard-feynman-knowing-something/",class:"whitespace-no-wrap font-medium text-blue-700 hover:text-blue-600 transition ease-in-out duration-150"},"Feynman \u2192"))))),Object(o.b)("h3",null,"Views"),Object(o.b)("p",null,"SwiftUI Views are structures that conform to the ",Object(o.b)("inlineCode",{parentName:"p"},"View")," protocol, which requires a computed property called ",Object(o.b)("inlineCode",{parentName:"p"},"body")," that holds the layout and hierarchy of the view. SwiftUI files can also contain an additional structure that declares the ",Object(o.b)("inlineCode",{parentName:"p"},"PreviewProvider")," for that view. The preview is useful for viewing live in Xcode and is ignored at compile time. In this example, the view contains a single ",Object(o.b)("inlineCode",{parentName:"p"},"Text()")," view with a ",Object(o.b)("inlineCode",{parentName:"p"},".padding()")," modifer applied."),Object(o.b)("pre",{className:"language-swift"},Object(o.b)("code",Object(s.a)({parentName:"pre"},{className:"language-Swift"}),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"struct")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"ContentView"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"View")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"var")," body",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," some ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"View")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n        ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"Text"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"Hello, world!"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n            ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"padding"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n\n",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"struct")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"ContentView_Previews"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"PreviewProvider")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"static")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"var")," previews",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," some ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"View")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n        ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"ContentView"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n          ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"previewLayout"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"fixed"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),"width",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"300"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," height",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"200"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n")),Object(o.b)("img",{src:d.a,alt:"basic views"}),Object(o.b)("h3",null,"View Modifiers"),Object(o.b)("p",null,"Using view modifiers, you can change the appearance of your views. Changing the text font with ",Object(o.b)("inlineCode",{parentName:"p"},".font()"),", changing the background color with ",Object(o.b)("inlineCode",{parentName:"p"},".background()")," and alter the ",Object(o.b)("inlineCode",{parentName:"p"},".padding()")," and corner radius of the view. These are just a few of the built-in modifiers in SwiftUI."),Object(o.b)("pre",{className:"language-swift"},Object(o.b)("code",Object(s.a)({parentName:"pre"},{className:"language-Swift"}),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"struct")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"ContentView"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"View")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"var")," body",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," some ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"View")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n        ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"Text"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"Hello, world!"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n            ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"foregroundColor"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),"blue",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n            ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"fontWeight"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),"bold",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n            ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"padding"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n            ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"background"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"Color"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),"black",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"opacity"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"0.05"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n            ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"cornerRadius"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"17"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n")),Object(o.b)("img",{src:m.a,alt:"modifiers"}),Object(o.b)("p",null,"It is possible to create our own view modifiers in SwiftUI using a ",Object(o.b)("inlineCode",{parentName:"p"},"ViewModifier"),", but that's a topic for another post."),Object(o.b)("h3",null,"Lists"),Object(o.b)("p",null,"We've seen an example of a text element above, but what about a list of text views? Let's create an array and iterate over it and display the results in a ",Object(o.b)("inlineCode",{parentName:"p"},"List")," view."),Object(o.b)("pre",{className:"language-swift"},Object(o.b)("code",Object(s.a)({parentName:"pre"},{className:"language-Swift"}),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"struct")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"ContentView"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"View")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"let")," fruits ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"=")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"["),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"pineapple"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"raspberry"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"mango"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"cherry"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"]"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"var")," body",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," some ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"View")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n      ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"List"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),"fruits",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," id",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," \\",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),"hashValue",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{")," fruit ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"in"),"\n        ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"Text"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),"fruit",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n      ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n")),Object(o.b)("img",{src:r.a,alt:"simple lists"}),Object(o.b)("h3",null,"Navigation"),Object(o.b)("p",null,"In UIKit, ",Object(o.b)("inlineCode",{parentName:"p"},"UINavigationController")," is used to push and pop views off the presentation layer. In SwiftUI, ",Object(o.b)("inlineCode",{parentName:"p"},"NavigationView")," handles this functionality with a ",Object(o.b)("inlineCode",{parentName:"p"},"destination")," parameter."),Object(o.b)("pre",{className:"language-swift"},Object(o.b)("code",Object(s.a)({parentName:"pre"},{className:"language-Swift"}),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"struct")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"ContentView"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"View")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"let")," fruits ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"=")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"["),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"One"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"Two"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"Three"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"]"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"var")," body",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," some ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"View")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n      ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"NavigationView")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n        ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"List"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),"fruits",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," id",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," \\",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),"hashValue",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{")," fruit ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"in"),"\n          ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"NavigationLink"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),"destination",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":"),"\n                          ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"VStack")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n                            ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"Text"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"Second view"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n                            ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"Spacer"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n                          ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n            ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"Text"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"List item"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n          ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n        ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n        ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"navigationBarTitle"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"Navigation View"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n      ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n")),Object(o.b)("img",{src:l.a,alt:"navigation view"}),Object(o.b)("img",{src:j.a,alt:"destination view"}),Object(o.b)("h3",null,"State"),Object(o.b)("p",null,"One of the big shifts in logic with SwiftUI is how views handle state, or changes to their properties and data. SwiftUI views are a function of state. When a user interacts with a view, state can be changed. When state or data is changed, the entire view hierarchy is re-rendered, reflecting the new state of the application's data."),Object(o.b)("p",null,"SwiftUI needs a way to know if a property can be changed, and if so, broadcast those changes up the view chain. This is done with the ",Object(o.b)("inlineCode",{parentName:"p"},"@State")," property wrapper."),Object(o.b)("pre",{className:"language-swift"},Object(o.b)("code",Object(s.a)({parentName:"pre"},{className:"language-Swift"}),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"struct")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"ContentView"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"View")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n  @",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"State")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"private")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"var")," username",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"String")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"=")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'""'),"\n\n  ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-purple"}),"var")," body",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," some ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"View")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:""}),"VStack")," ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n      ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"Text"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),"username",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n      ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"TextField"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-green"}),'"username"'),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),",")," text",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),":")," $username",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-blue"}),"multilineTextAlignment"),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"."),"center",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n    ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n  ",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n",Object(o.b)("span",Object(s.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n")),Object(o.b)("p",null,"In the example above, the ",Object(o.b)("inlineCode",{parentName:"p"},"@State")," property wrapper will notify the parent view of any changes. To represent the State property within a view's parameters, ",Object(o.b)("inlineCode",{parentName:"p"},"$")," is used as a prefix to the variable name. Whatever the user types into the textfield, the ",Object(o.b)("inlineCode",{parentName:"p"},"Text")," element above will display the exact data."),Object(o.b)("img",{src:O.a,alt:"navigation view"}),Object(o.b)("img",{src:N.a,alt:"destination view"}),Object(o.b)("h3",null,"Conclusion"),Object(o.b)("p",null,"SwiftUI brings with it a world of possiblities for developers of any experience. It's approachable for newcomers, and fairly complex for those looking to dive into this new declarative framework."),Object(o.b)("p",null,"This just a light sampling of the first things I learned last year when SwiftUI was announced at WWDC 2019. Many more posts to come on the subject."),Object(o.b)("h3",null,"Resources"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Apple's official ",Object(o.b)("a",Object(s.a)({parentName:"li"},{href:"https://developer.apple.com/tutorials/swiftui/"}),"SwiftUI tutorial"),"."),Object(o.b)("li",{parentName:"ul"},"Hacking With Swift - ",Object(o.b)("a",Object(s.a)({parentName:"li"},{href:"https://www.hackingwithswift.com/100/swiftui"}),"100 Days of SwiftUI"),".")))}f.isMDXComponent=!0},CZVI:function(e,t,a){"use strict";a.d(t,"a",(function(){return u}));var c=a("wx14"),s=a("Ff2n"),n=a("q1tI"),b=a.n(n),o=a("8Kt/"),p=a.n(o),i=b.a.createElement;function d(e){var{children:t}=e;return i("h1",{className:"text-5xl leading-14 font-bold text-gray-900 tracking-tight sm:text-4xl sm:leading-10 md:text-5xl md:leading-14"},t)}var m=a("SYun"),r=a.n(m),l=a("YFqc"),j=a.n(l),O=a("nOHt"),N=a("7ljp"),w=b.a.createElement,h={pre:e=>{var{className:t}=e,a=Object(s.a)(e,["className"]);return w("pre",Object(c.a)({className:"".concat(t," rounded-md bg-gray-800 py-3 px-4 overflow-x-auto")},a))},"pre.code":e=>{var{className:t}=e,a=Object(s.a)(e,["className"]);return w("code",Object(c.a)({className:"".concat(t," text-gray-200")},a))}},x=r()("{dddd}, {MMMM} {DD}, {YYYY}");function u(e){var{meta:t,children:a,posts:c}=e,s=Object(O.useRouter)(),n=c.findIndex(e=>e.link===s.pathname),b=c[n+1],o=c[n-1];return w("article",{className:"xl:divide-y xl:divide-gray-200"},w(p.a,null,w("title",null,t.title," \u2013 Tailwind CSS"),w("meta",{name:"twitter:card",content:"summary_large_image"}),w("meta",{name:"twitter:site",content:"@waynedahlberg"}),w("meta",{name:"twitter:creator",content:"@waynedahlberg"}),w("meta",{name:"twitter:title",content:"".concat(t.title," \u2013 Wayne Dahlberg")}),w("meta",{name:"twitter:description",content:t.description}),w("meta",{name:"twitter:image",content:"https://blog.tailwindcss.com".concat(t.image)}),w("meta",{property:"og:url",content:"https://blog.tailwindcss.com".concat(s.pathname)}),w("meta",{property:"og:type",content:"article"}),w("meta",{property:"og:title",content:"".concat(t.title," \u2013 Wayne Dahlberg")}),w("meta",{property:"og:description",content:t.description}),w("meta",{property:"og:image",content:"https://blog.tailwindcss.com".concat(t.image)}),w("meta",{name:"description",content:t.description})),w("header",{className:"pt-6 xl:pb-10"},w("div",{className:"space-y-1 text-center"},w("dl",{className:"space-y-10"},w("div",null,w("dt",{className:"sr-only"},"Published on"),w("dd",{className:"text-sm leading-6 font-medium text-gray-500"},w("time",{dateTime:t.date},x.render(new Date(t.date)))))),w("div",null,w(d,null,t.title)))),w("div",{className:"divide-y xl:divide-y-0 divide-gray-200 xl:grid xl:grid-cols-4 xl:col-gap-6 pb-16 xl:pb-20",style:{gridTemplateRows:"auto 1fr"}},w("dl",{className:"pt-6 pb-10 xl:pt-11 xl:border-b xl:border-gray-200"},w("dt",{className:"sr-only"},"Authors"),w("dd",null,w("ul",{className:"flex justify-center xl:block space-x-8 sm:space-x-12 xl:space-x-0 xl:space-y-8"},t.authors.map(e=>w("li",{key:e.twitter,className:"flex items-center space-x-2"},w("img",{src:e.avatar,alt:"",className:"w-10 h-10 rounded-full"}),w("dl",{className:"text-sm font-medium leading-5 whitespace-no-wrap"},w("dt",{className:"sr-only"},"Name"),w("dd",{className:"text-gray-900"},e.name),w("dt",{className:"sr-only"},"Twitter"),w("dd",null,w("a",{href:"https://twitter.com/".concat(e.twitter),className:"text-teal-500 hover:text-teal-700"},e.twitter)))))))),w("div",{className:"divide-y divide-gray-200 xl:pb-0 xl:col-span-3 xl:row-span-2"},w("div",{className:"prose max-w-none pt-10 pb-8"},w(N.a,{components:h},a))),w("footer",{className:"text-sm font-medium leading-5 divide-y divide-gray-200 xl:col-start-1 xl:row-start-2"},(o||b)&&w("div",{className:"space-y-8 py-8"},o&&w("div",null,w("h2",{className:"text-xs tracking-wide uppercase text-gray-500"},"Next Article"),w("div",{className:"text-teal-500 hover:text-teal-600"},w(j.a,{href:o.link},w("a",null,o.title)))),b&&w("div",null,w("h2",{className:"text-xs tracking-wide uppercase text-gray-500"},"Previous Article"),w("div",{className:"text-teal-500 hover:text-teal-700"},w(j.a,{href:b.link},w("a",null,b.title))))),w("div",{className:"pt-8"},w(j.a,{href:"/"},w("a",{className:"text-teal-500 hover:text-teal-700"},"\u2190 All Posts"))))))}},fFf7:function(e,t,a){"use strict";t.a="/_next/static/media/swiftui-basics-02.ba1f87f1dd1de6ba98b238d9e15f280e.jpg"},ggzO:function(e,t,a){"use strict";t.a="/_next/static/media/swiftui-basics-05.bcda486776d5a6b080ed986f26a5d910.jpg"},h2Ty:function(e,t,a){"use strict";t.a="/_next/static/media/swiftui-basics-01.3727074fee1f59334ca7c472db5659bd.jpg"},jybU:function(e,t,a){"use strict";t.a="/_next/static/media/swiftui-basics-03.e25b52a881c87c0e50b714165c1ba49a.jpg"},njY4:function(e,t,a){"use strict";t.a="/_next/static/media/swiftui-basics-07.f515ced8782d5125691550e3c85f29fe.jpg"},q5TQ:function(e,t,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/110820-swiftui-basics",function(){return a("7SZq")}])},uCkV:function(e,t,a){"use strict";t.a="/_next/static/media/swiftui-basics-04.23fa79e7dfc07b112dd5285318cb3b0d.jpg"},zqH2:function(e,t,a){"use strict";t.a="/_next/static/media/swiftui-basics-06.a57fa0e4919620b18926e8b21755f005.jpg"}},[["q5TQ",0,2,1,3]]]);