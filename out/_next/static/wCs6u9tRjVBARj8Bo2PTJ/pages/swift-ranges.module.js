(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{CZVI:function(e,a,t){"use strict";t.d(a,"a",(function(){return w}));var c=t("wx14"),n=t("Ff2n"),s=t("q1tI"),b=t.n(s),l=t("8Kt/"),p=t.n(l),o=b.a.createElement;function r(e){var{children:a}=e;return o("h1",{className:"text-3xl leading-14 font-bold text-gray-900 tracking-tight sm:text-5xl sm:leading-10 md:text-6xl md:leading-14"},a)}var m=t("SYun"),d=t.n(m),i=t("YFqc"),O=t.n(i),j=t("nOHt"),N=t("7ljp"),u=b.a.createElement,x={pre:e=>{var{className:a}=e,t=Object(n.a)(e,["className"]);return u("pre",Object(c.a)({className:"".concat(a," rounded-md bg-gray-800 py-3 px-4 overflow-x-auto")},t))},"pre.code":e=>{var{className:a}=e,t=Object(n.a)(e,["className"]);return u("code",Object(c.a)({className:"".concat(a," text-gray-200")},t))}},g=d()("{dddd}, {MMMM} {DD}, {YYYY}");function w(e){var{meta:a,children:t,posts:c}=e,n=Object(j.useRouter)(),s=c.findIndex(e=>e.link===n.pathname),b=c[s+1],l=c[s-1];return u("article",{className:"xl:divide-y xl:divide-gray-200"},u(p.a,null,u("title",null,a.title," \u2013 Tailwind CSS"),u("meta",{name:"twitter:card",content:"summary_large_image"}),u("meta",{name:"twitter:site",content:"@waynedahlberg"}),u("meta",{name:"twitter:creator",content:"@waynedahlberg"}),u("meta",{name:"twitter:title",content:"".concat(a.title," \u2013 Wayne Dahlberg")}),u("meta",{name:"twitter:description",content:a.description}),u("meta",{name:"twitter:image",content:"https://blog.tailwindcss.com".concat(a.image)}),u("meta",{property:"og:url",content:"https://blog.tailwindcss.com".concat(n.pathname)}),u("meta",{property:"og:type",content:"article"}),u("meta",{property:"og:title",content:"".concat(a.title," \u2013 Wayne Dahlberg")}),u("meta",{property:"og:description",content:a.description}),u("meta",{property:"og:image",content:"https://blog.tailwindcss.com".concat(a.image)}),u("meta",{name:"description",content:a.description})),u("header",{className:"pt-6 xl:pb-10"},u("div",{className:"space-y-1 text-center"},u("dl",{className:"space-y-10"},u("div",null,u("dt",{className:"sr-only"},"Published on"),u("dd",{className:"text-sm leading-6 font-medium text-gray-500"},u("time",{dateTime:a.date},g.render(new Date(a.date)))))),u("div",null,u(r,null,a.title)))),u("div",{className:"divide-y xl:divide-y-0 divide-gray-200 xl:grid xl:grid-cols-4 xl:col-gap-6 pb-16 xl:pb-20",style:{gridTemplateRows:"auto 1fr"}},u("dl",{className:"pt-6 pb-10 xl:pt-11 xl:border-b xl:border-gray-200"},u("dt",{className:"sr-only"},"Authors"),u("dd",null,u("ul",{className:"flex justify-center xl:block space-x-8 sm:space-x-12 xl:space-x-0 xl:space-y-8"},a.authors.map(e=>u("li",{key:e.twitter,className:"flex items-center space-x-2"},u("img",{src:e.avatar,alt:"",className:"w-10 h-10 rounded-full"}),u("dl",{className:"text-sm font-medium leading-5 whitespace-no-wrap"},u("dt",{className:"sr-only"},"Name"),u("dd",{className:"text-gray-900"},e.name),u("dt",{className:"sr-only"},"Twitter"),u("dd",null,u("a",{href:"https://twitter.com/".concat(e.twitter),className:"text-teal-500 hover:text-teal-700"},e.twitter)))))))),u("div",{className:"divide-y divide-gray-200 xl:pb-0 xl:col-span-3 xl:row-span-2"},u("div",{className:"prose max-w-none pt-10 pb-8"},u(N.a,{components:x},t))),u("footer",{className:"text-sm font-medium leading-5 divide-y divide-gray-200 xl:col-start-1 xl:row-start-2"},(l||b)&&u("div",{className:"space-y-8 py-8"},l&&u("div",null,u("h2",{className:"text-xs tracking-wide uppercase text-gray-500"},"Next Article"),u("div",{className:"text-teal-500 hover:text-teal-600"},u(O.a,{href:l.link},u("a",null,l.title)))),b&&u("div",null,u("h2",{className:"text-xs tracking-wide uppercase text-gray-500"},"Previous Article"),u("div",{className:"text-teal-500 hover:text-teal-700"},u(O.a,{href:b.link},u("a",null,b.title))))),u("div",{className:"pt-8"},u(O.a,{href:"/"},u("a",{className:"text-teal-500 hover:text-teal-700"},"\u2190 All Posts"))))))}},DpMx:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/swift-ranges",function(){return t("uVJs")}])},r94c:function(e,a,t){"use strict";a.a="/_next/static/media/hero-ranges.3b4e1a12d295783da705b4059b77eb09.png"},uVJs:function(e,a,t){"use strict";t.r(a),t.d(a,"__N_SSG",(function(){return m})),t.d(a,"meta",(function(){return d})),t.d(a,"default",(function(){return j}));var c=t("Ff2n"),n=t("wx14"),s=t("q1tI"),b=t.n(s),l=t("7ljp"),p=t("CZVI"),o=t("iBhN"),r=t("r94c"),m=(b.a.createElement,!0),d={title:"Swift Ranges",description:"The basics of Swift Enumerations.",date:"2020-11-24T12:00:00.000Z",authors:[o.a],discussion:"https://github.com/tailwindlabs/tailwindcss/discussions/2511"},i={meta:d},O=e=>Object(l.b)(p.a,Object(n.a)({meta:d},e));function j(e){var{components:a}=e,t=Object(c.a)(e,["components"]);return Object(l.b)(O,Object(n.a)({},i,t,{components:a,mdxType:"MDXLayout"}),Object(l.b)("img",{src:r.a,alt:"Swift Ranges hero image"}),Object(l.b)("p",null,"Ranges are generic Swift Structures for selecting a range, or a limited subset, of an existing type. Ranges are used commonly for identifying elements between the lowest and highest values in a set."),Object(l.b)("div",{class:"rounded-md bg-blue-50 p-4"},Object(l.b)("div",{class:"flex"},Object(l.b)("div",{class:"flex-shrink-0"},Object(l.b)("svg",{class:"h-5 w-5 text-blue-400",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 20 20",fill:"currentColor"},Object(l.b)("path",{fillRule:"evenodd",d:"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z",clipRule:"evenodd"}))),Object(l.b)("div",{class:"ml-3 flex-1 md:flex md:justify-between"},Object(l.b)("p",{class:"text-sm leading-5 text-blue-700"},"This is a another post in a series intended as a personal growth exercise. As I learn and digest new things, I want to write about them to solidify my understanding."),Object(l.b)("p",{class:"mt-3 text-sm leading-5 md:mt-0 md:ml-6"},Object(l.b)("a",{href:"https://fs.blog/2015/01/richard-feynman-knowing-something/",class:"whitespace-no-wrap font-medium text-blue-700 hover:text-blue-600 transition ease-in-out duration-150"},"Feynman \u2192"))))),Object(l.b)("h2",null,"Kinds of Ranges"),Object(l.b)("p",null,"Swift gives us two ways of creating ranges. Half-Open range, and Closed Range."),Object(l.b)("h3",null,"Half-Open Range"),Object(l.b)("p",null,"The ",Object(l.b)("em",{parentName:"p"},"Half-Open")," range operator is declared with ",Object(l.b)("inlineCode",{parentName:"p"},"..<")," between a numeric pair.\nUsing a ",Object(l.b)("inlineCode",{parentName:"p"},"Range")," instance, you can quickly check to see if a value is contained in a particular range of values. This creates a range up to but ",Object(l.b)("strong",{parentName:"p"},"not")," including the upper bound value."),Object(l.b)("pre",{className:"language-swift"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-Swift"}),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"let")," underFive ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"=")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"0.0"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"<"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"5.0"),"\nunderFive",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"contains"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"3.14"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// true"),"\nunderFive",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"contains"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"6.28"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// false"),"\nunderFive",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"contains"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"5.0"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// false (upper bound value not included)"),"\n")),Object(l.b)("p",null,"Range instances can represent an empty interval, unlike ",Object(l.b)("em",{parentName:"p"},"Closed Range"),"(see below.)"),Object(l.b)("pre",{className:"language-swift"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-Swift"}),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"let")," empty ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"=")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"0.0"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"<"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"0.0"),"\nempty",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"contains"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"0.0"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// false"),"\nempty",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"isEmpty")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// true"),"\n")),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Range")," can also be used to specify a collection of consecutive, ",Object(l.b)("em",{parentName:"p"},"strideable")," values, usually Integers. It can also be used in ",Object(l.b)("inlineCode",{parentName:"p"},"for-in")," loops or with any sequence or collection method. The results of the range include all values up to, but ",Object(l.b)("strong",{parentName:"p"},"not")," including the upperBound."),Object(l.b)("pre",{className:"language-swift"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-Swift"}),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"for")," n ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"in")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"3"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"<"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"5")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n  ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"print"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),"n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),'// prints "3"'),"\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),'// prints "4"'),"\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),'// does NOT print "5"'),"\n")),Object(l.b)("p",null,"Ranges help in ",Object(l.b)("em",{parentName:"p"},"Switch")," statements, using them for your cases. Consider the following:"),Object(l.b)("pre",{className:"language-swift"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-Swift"}),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"let")," score ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"=")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"92"),"\n\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"switch")," score ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n  ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"case")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"0"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"<"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"50"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),":"),"\n    ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"print"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-green"}),'"Fail"'),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n  ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"case")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"50"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"<"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"90"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),":"),"\n    ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"print"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-green"}),'"Pass"'),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n  ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"default"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),":"),"\n    ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"print"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-green"}),'"Excellent"'),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")"),"\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"}")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),'// prints "Excellent"'),"\n")),Object(l.b)("h3",null,"Closed Range"),Object(l.b)("p",null,"A ",Object(l.b)("em",{parentName:"p"},"Closed")," range operator is declared with ",Object(l.b)("inlineCode",{parentName:"p"},"...")," between a pair of numeric values. The left value being the ",Object(l.b)("inlineCode",{parentName:"p"},"lowerBound")," and the right value being ",Object(l.b)("inlineCode",{parentName:"p"},"upperBound"),". The Closed Range ",Object(l.b)("strong",{parentName:"p"},"includes")," the upperBound value."),Object(l.b)("pre",{className:"language-swift"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-Swift"}),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"let")," range ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"ClosedRange")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"=")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"0"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"5"),"\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"print"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),"range",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// 0...5"),"\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"print"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),"range",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"first"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// Optional(0)"),"\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"print"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),"range",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"."),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"last"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// Optional(10)"),"\n\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"for")," index ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"in")," range ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"{"),"\n  ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-blue"}),"print"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"("),"index",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),")")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-gray-400 italic"}),"// prints consecutivly, values from 0 to 5"),"\n",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),"}"),"\n")),Object(l.b)("h3",null,"Inspecting a Range"),Object(l.b)("p",null,"Here are just a few of the operations you can call on a range instance in Swift. There are many more in ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"https://developer.apple.com/documentation/swift/Range"}),"Apple's Documentation")," for Range."),Object(l.b)("pre",{className:"language-swift"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-Swift"}),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"var")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"isEmpty"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"Bool"),"\n")),Object(l.b)("p",null,"Returns a Boolean value indicating whether the range contains ",Object(l.b)("strong",{parentName:"p"},"no")," elements."),Object(l.b)("pre",{className:"language-swift"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-Swift"}),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"var")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"count"),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"Int"),"\n")),Object(l.b)("p",null,"Returns the number of elements in the collection of values."),Object(l.b)("pre",{className:"language-swift"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-Swift"}),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"let")," lowerBound",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"Bound"),"\n")),Object(l.b)("p",null,"Returns the range's lower bound"),Object(l.b)("pre",{className:"language-swift"},Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-Swift"}),Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-purple"}),"let")," upperBound",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:"text-code-white"}),":")," ",Object(l.b)("span",Object(n.a)({parentName:"code"},{className:""}),"Bound"),"\n")),Object(l.b)("p",null,"Returns the range's upper bound"),Object(l.b)("p",null,"That's it for this quick post. See you in the next one."))}j.isMDXComponent=!0}},[["DpMx",0,2,1,3]]]);